
// _swiftEmptyArrayStorage
sil_global @_swiftEmptyArrayStorage : $_SwiftEmptyArrayStorage

// _allocateUninitializedArray<A>(_:)
sil public_external [serialized] [always_inline] @$Ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <Element> (Builtin.Word) -> (@owned Array<Element>, Builtin.RawPointer) {
// %0                                             // users: %13, %1
bb0(%0 : $Builtin.Word):
  %1 = builtin "zextOrBitCast_Word_Int64"(%0 : $Builtin.Word) : $Builtin.Int64 // users: %4, %2
  %2 = struct $Int (%1 : $Builtin.Int64)          // users: %16, %8
  %3 = integer_literal $Builtin.Int64, 0          // user: %4
  %4 = builtin "cmp_slt_Int64"(%3 : $Builtin.Int64, %1 : $Builtin.Int64) : $Builtin.Int1 // user: %5
  cond_br %4, bb2, bb1                            // id: %5

bb1:                                              // Preds: bb0
  %6 = metatype $@thin Array<Element>.Type        // user: %8
  // function_ref static Array._allocateUninitialized(_:)
  %7 = function_ref @$SSa22_allocateUninitializedySayxG_SpyxGtSiFZ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>) // user: %8
  %8 = apply %7<Element>(%2, %6) : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>) // users: %10, %9
  %9 = tuple_extract %8 : $(Array<Element>, UnsafeMutablePointer<Element>), 0 // user: %12
  %10 = tuple_extract %8 : $(Array<Element>, UnsafeMutablePointer<Element>), 1 // user: %11
  %11 = struct_extract %10 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue // user: %12
  br bb3(%9 : $Array<Element>, %11 : $Builtin.RawPointer) // id: %12

bb2:                                              // Preds: bb0
  %13 = alloc_ref [tail_elems $Element * %0 : $Builtin.Word] $_ContiguousArrayStorage<Element> // user: %16
  %14 = metatype $@thin Array<Element>.Type       // user: %16
  // function_ref static Array._adoptStorage(_:count:)
  %15 = function_ref @$SSa13_adoptStorage_5countSayxG_SpyxGts016_ContiguousArrayB0CyxG_SitFZ : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>, Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>) // user: %16
  %16 = apply %15<Element>(%13, %2, %14) : $@convention(method) <τ_0_0> (@owned _ContiguousArrayStorage<τ_0_0>, Int, @thin Array<τ_0_0>.Type) -> (@owned Array<τ_0_0>, UnsafeMutablePointer<τ_0_0>) // users: %18, %17
  %17 = tuple_extract %16 : $(Array<Element>, UnsafeMutablePointer<Element>), 0 // user: %20
  %18 = tuple_extract %16 : $(Array<Element>, UnsafeMutablePointer<Element>), 1 // user: %19
  %19 = struct_extract %18 : $UnsafeMutablePointer<Element>, #UnsafeMutablePointer._rawValue // user: %20
  br bb3(%17 : $Array<Element>, %19 : $Builtin.RawPointer) // id: %20

// %21                                            // user: %23
// %22                                            // user: %23
bb3(%21 : $Array<Element>, %22 : $Builtin.RawPointer): // Preds: bb2 bb1
  %23 = tuple (%21 : $Array<Element>, %22 : $Builtin.RawPointer) // user: %24
  return %23 : $(Array<Element>, Builtin.RawPointer) // id: %24
} // end sil function '$Ss27_allocateUninitializedArrayySayxG_BptBwlF'

// Array.init(arrayLiteral:)
sil public_external [serialized] @$SSa12arrayLiteralSayxGxd_tcfC : $@convention(method) <Element> (@owned Array<Element>, @thin Array<Element>.Type) -> @owned Array<Element> {
// %0                                             // user: %2
bb0(%0 : $Array<Element>, %1 : $@thin Array<Element>.Type):
  return %0 : $Array<Element>                     // id: %2
} // end sil function '$SSa12arrayLiteralSayxGxd_tcfC'

// static Array._allocateUninitialized(_:)
sil public_external [serialized] [_semantics "array.uninitialized"] @$SSa22_allocateUninitializedySayxG_SpyxGtSiFZ : $@convention(method) <Element> (Int, @thin Array<Element>.Type) -> (@owned Array<Element>, UnsafeMutablePointer<Element>) {
// %0                                             // user: %4
bb0(%0 : $Int, %1 : $@thin Array<Element>.Type):
  %2 = metatype $@thin Array<Element>.Type        // user: %4
  // function_ref Array.init(_uninitializedCount:)
  %3 = function_ref @$SSa19_uninitializedCountSayxGSi_tcfC : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %4
  %4 = apply %3<Element>(%0, %2) : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // users: %41, %5
  %5 = struct_extract %4 : $Array<Element>, #Array._buffer // user: %6
  %6 = struct_extract %5 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage // user: %7
  %7 = struct_extract %6 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue // users: %35, %34, %32, %31, %26, %22, %17
  %8 = metatype $@thick Element.Type              // users: %18, %9
  %9 = builtin "canBeClass"<Element>(%8 : $@thick Element.Type) : $Builtin.Int8 // users: %14, %11
  %10 = integer_literal $Builtin.Int8, 0          // user: %11
  %11 = builtin "cmp_eq_Int8"(%9 : $Builtin.Int8, %10 : $Builtin.Int8) : $Builtin.Int1 // user: %12
  cond_br %11, bb4, bb1                           // id: %12

bb1:                                              // Preds: bb0
  %13 = integer_literal $Builtin.Int8, 1          // user: %14
  %14 = builtin "cmp_eq_Int8"(%9 : $Builtin.Int8, %13 : $Builtin.Int8) : $Builtin.Int1 // user: %15
  cond_br %14, bb3, bb2                           // id: %15

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %16 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %18
  strong_retain %7 : $Builtin.BridgeObject        // id: %17
  %18 = apply %16<Element>(%8) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %19
  br bb5(%18 : $Bool)                             // id: %19

bb3:                                              // Preds: bb1
  %20 = integer_literal $Builtin.Int1, -1         // user: %21
  %21 = struct $Bool (%20 : $Builtin.Int1)        // user: %23
  strong_retain %7 : $Builtin.BridgeObject        // id: %22
  br bb5(%21 : $Bool)                             // id: %23

bb4:                                              // Preds: bb0
  %24 = integer_literal $Builtin.Int1, 0          // user: %25
  %25 = struct $Bool (%24 : $Builtin.Int1)        // user: %27
  strong_retain %7 : $Builtin.BridgeObject        // id: %26
  br bb5(%25 : $Bool)                             // id: %27

// %28                                            // user: %29
bb5(%28 : $Bool):                                 // Preds: bb4 bb3 bb2
  %29 = struct_extract %28 : $Bool, #Bool._value  // user: %30
  cond_br %29, bb7, bb6                           // id: %30

bb6:                                              // Preds: bb5
  strong_release %7 : $Builtin.BridgeObject       // id: %31
  %32 = unchecked_ref_cast %7 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase // user: %33
  br bb8(%32 : $_ContiguousArrayStorageBase)      // id: %33

bb7:                                              // Preds: bb5
  %34 = bridge_object_to_ref %7 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase // user: %36
  strong_release %7 : $Builtin.BridgeObject       // id: %35
  br bb8(%34 : $_ContiguousArrayStorageBase)      // id: %36

// %37                                            // user: %38
bb8(%37 : $_ContiguousArrayStorageBase):          // Preds: bb7 bb6
  %38 = ref_tail_addr %37 : $_ContiguousArrayStorageBase, $Element // user: %39
  %39 = address_to_pointer %38 : $*Element to $Builtin.RawPointer // user: %40
  %40 = struct $UnsafeMutablePointer<Element> (%39 : $Builtin.RawPointer) // user: %41
  %41 = tuple (%4 : $Array<Element>, %40 : $UnsafeMutablePointer<Element>) // user: %42
  return %41 : $(Array<Element>, UnsafeMutablePointer<Element>) // id: %42
} // end sil function '$SSa22_allocateUninitializedySayxG_SpyxGtSiFZ'

// static Array._adoptStorage(_:count:)
sil public_external [serialized] [_semantics "array.uninitialized"] @$SSa13_adoptStorage_5countSayxG_SpyxGts016_ContiguousArrayB0CyxG_SitFZ : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>, Int, @thin Array<Element>.Type) -> (@owned Array<Element>, UnsafeMutablePointer<Element>) {
// %0                                             // users: %47, %40, %22, %18, %13, %3
// %1                                             // users: %36, %25
bb0(%0 : $_ContiguousArrayStorage<Element>, %1 : $Int, %2 : $@thin Array<Element>.Type):
  %3 = upcast %0 : $_ContiguousArrayStorage<Element> to $_ContiguousArrayStorageBase // users: %44, %38
  %4 = metatype $@thick Element.Type              // users: %14, %5
  %5 = builtin "canBeClass"<Element>(%4 : $@thick Element.Type) : $Builtin.Int8 // users: %10, %7
  %6 = integer_literal $Builtin.Int8, 0           // user: %7
  %7 = builtin "cmp_eq_Int8"(%5 : $Builtin.Int8, %6 : $Builtin.Int8) : $Builtin.Int1 // user: %8
  cond_br %7, bb4, bb1                            // id: %8

bb1:                                              // Preds: bb0
  %9 = integer_literal $Builtin.Int8, 1           // user: %10
  %10 = builtin "cmp_eq_Int8"(%5 : $Builtin.Int8, %9 : $Builtin.Int8) : $Builtin.Int1 // user: %11
  cond_br %10, bb3, bb2                           // id: %11

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %12 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %14
  strong_retain %0 : $_ContiguousArrayStorage<Element> // id: %13
  %14 = apply %12<Element>(%4) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %15
  br bb5(%14 : $Bool)                             // id: %15

bb3:                                              // Preds: bb1
  %16 = integer_literal $Builtin.Int1, -1         // user: %17
  %17 = struct $Bool (%16 : $Builtin.Int1)        // user: %19
  strong_retain %0 : $_ContiguousArrayStorage<Element> // id: %18
  br bb5(%17 : $Bool)                             // id: %19

bb4:                                              // Preds: bb0
  %20 = integer_literal $Builtin.Int1, 0          // user: %21
  %21 = struct $Bool (%20 : $Builtin.Int1)        // user: %23
  strong_retain %0 : $_ContiguousArrayStorage<Element> // id: %22
  br bb5(%21 : $Bool)                             // id: %23

// %24                                            // user: %28
bb5(%24 : $Bool):                                 // Preds: bb4 bb3 bb2
  %25 = struct_extract %1 : $Int, #Int._value     // user: %27
  %26 = integer_literal $Builtin.Int64, 1         // users: %32, %27
  %27 = builtin "shl_Int64"(%25 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int64 // user: %34
  %28 = struct_extract %24 : $Bool, #Bool._value  // user: %29
  cond_br %28, bb7, bb6                           // id: %29

bb6:                                              // Preds: bb5
  %30 = integer_literal $Builtin.Int64, 0         // user: %31
  br bb8(%30 : $Builtin.Int64)                    // id: %31

bb7:                                              // Preds: bb5
  br bb8(%26 : $Builtin.Int64)                    // id: %32

// %33                                            // user: %34
bb8(%33 : $Builtin.Int64):                        // Preds: bb7 bb6
  %34 = builtin "or_Int64"(%27 : $Builtin.Int64, %33 : $Builtin.Int64) : $Builtin.Int64 // user: %35
  %35 = struct $UInt (%34 : $Builtin.Int64)       // user: %36
  %36 = struct $_SwiftArrayBodyStorage (%1 : $Int, %35 : $UInt) // user: %37
  %37 = struct $_ArrayBody (%36 : $_SwiftArrayBodyStorage) // user: %39
  %38 = ref_element_addr %3 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %39
  store %37 to %38 : $*_ArrayBody                 // id: %39
  %40 = unchecked_ref_cast %0 : $_ContiguousArrayStorage<Element> to $Builtin.BridgeObject // user: %41
  %41 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%40 : $Builtin.BridgeObject) // user: %42
  %42 = struct $_ArrayBuffer<Element> (%41 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>) // user: %43
  %43 = struct $Array<Element> (%42 : $_ArrayBuffer<Element>) // user: %48
  %44 = ref_tail_addr %3 : $_ContiguousArrayStorageBase, $Element // user: %45
  %45 = address_to_pointer %44 : $*Element to $Builtin.RawPointer // user: %46
  %46 = struct $UnsafeMutablePointer<Element> (%45 : $Builtin.RawPointer) // user: %48
  strong_release %0 : $_ContiguousArrayStorage<Element> // id: %47
  %48 = tuple (%43 : $Array<Element>, %46 : $UnsafeMutablePointer<Element>) // user: %49
  return %48 : $(Array<Element>, UnsafeMutablePointer<Element>) // id: %49
} // end sil function '$SSa13_adoptStorage_5countSayxG_SpyxGts016_ContiguousArrayB0CyxG_SitFZ'

// _ContiguousArrayStorageBase.init()
sil public_external [serialized] @$Ss27_ContiguousArrayStorageBaseCABycfc : $@convention(method) (@owned _ContiguousArrayStorageBase) -> @owned _ContiguousArrayStorageBase {
bb0(%0 : $_ContiguousArrayStorageBase):
  %1 = string_literal utf8 "Swift._ContiguousArrayStorageBase" // user: %2
  %2 = builtin "ptrtoint_Word"(%1 : $Builtin.RawPointer) : $Builtin.Word // users: %23, %19
  %3 = string_literal utf8 "init()"               // user: %4
  %4 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word // users: %33, %30
  %5 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/SwiftNativeNSArray.swift" // user: %6
  %6 = builtin "ptrtoint_Word"(%5 : $Builtin.RawPointer) : $Builtin.Word // users: %43, %40
  %7 = integer_literal $Builtin.Int64, 280        // user: %8
  %8 = struct $UInt (%7 : $Builtin.Int64)         // user: %53
  %9 = integer_literal $Builtin.Int64, 16         // user: %10
  %10 = struct $UInt (%9 : $Builtin.Int64)        // user: %53
  %11 = integer_literal $Builtin.Int32, 0         // users: %95, %81, %67
  br bb1                                          // id: %12

bb1:                                              // Preds: bb0
  %13 = metatype $@thin UnsafeBufferPointer<UInt8>.Type // users: %38, %29
  %14 = integer_literal $Builtin.Int8, 2          // users: %94, %88, %80, %74, %66, %60, %18
  %15 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/StaticString.swift" // user: %17
  %16 = integer_literal $Builtin.Word, 100        // user: %18
  %17 = builtin "ptrtoint_Word"(%15 : $Builtin.RawPointer) : $Builtin.Word // user: %18
  %18 = struct $StaticString (%17 : $Builtin.Word, %16 : $Builtin.Word, %14 : $Builtin.Int8) // users: %97, %83, %69
  %19 = builtin "zextOrBitCast_Word_Int64"(%2 : $Builtin.Word) : $Builtin.Int64 // user: %21
  %20 = integer_literal $Builtin.Int64, 0         // users: %41, %31, %21
  %21 = builtin "cmp_eq_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1 // user: %22
  cond_br %21, bb8, bb2                           // id: %22

bb2:                                              // Preds: bb1
  %23 = builtin "inttoptr_Word"(%2 : $Builtin.Word) : $Builtin.RawPointer // user: %24
  %24 = struct $UnsafePointer<UInt8> (%23 : $Builtin.RawPointer) // user: %25
  %25 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %24 : $UnsafePointer<UInt8> // user: %29
  %26 = integer_literal $Builtin.Int64, 33        // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %29
  // function_ref specialized UnsafeBufferPointer.init(start:count:)
  %28 = function_ref @$SSR5start5countSRyxGSPyxGSg_SitcfCs5UInt8V_Tgq5 : $@convention(method) (Optional<UnsafePointer<UInt8>>, Int, @thin UnsafeBufferPointer<UInt8>.Type) -> UnsafeBufferPointer<UInt8> // users: %38, %29
  %29 = apply %28(%25, %27, %13) : $@convention(method) (Optional<UnsafePointer<UInt8>>, Int, @thin UnsafeBufferPointer<UInt8>.Type) -> UnsafeBufferPointer<UInt8> // user: %53
  %30 = builtin "zextOrBitCast_Word_Int64"(%4 : $Builtin.Word) : $Builtin.Int64 // user: %31
  %31 = builtin "cmp_eq_Int64"(%30 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1 // user: %32
  cond_br %31, bb7, bb3                           // id: %32

bb3:                                              // Preds: bb2
  %33 = builtin "inttoptr_Word"(%4 : $Builtin.Word) : $Builtin.RawPointer // user: %34
  %34 = struct $UnsafePointer<UInt8> (%33 : $Builtin.RawPointer) // user: %35
  %35 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %34 : $UnsafePointer<UInt8> // user: %38
  %36 = integer_literal $Builtin.Int64, 6         // user: %37
  %37 = struct $Int (%36 : $Builtin.Int64)        // user: %38
  %38 = apply %28(%35, %37, %13) : $@convention(method) (Optional<UnsafePointer<UInt8>>, Int, @thin UnsafeBufferPointer<UInt8>.Type) -> UnsafeBufferPointer<UInt8> // user: %53
  // function_ref closure #1 in closure #1 in closure #1 in _unimplementedInitializer(className:initName:file:line:column:)
  %39 = function_ref @$Ss25_unimplementedInitializer9className04initD04file4line6columns5NeverOs12StaticStringV_A2JS2utFySRys5UInt8VGXEfU_yAMXEfU_yAMXEfU_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> () // user: %53
  %40 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64 // user: %41
  %41 = builtin "cmp_eq_Int64"(%40 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1 // user: %42
  cond_br %41, bb6, bb4                           // id: %42

bb4:                                              // Preds: bb3
  %43 = builtin "inttoptr_Word"(%6 : $Builtin.Word) : $Builtin.RawPointer // users: %47, %44
  %44 = struct $UnsafePointer<UInt8> (%43 : $Builtin.RawPointer) // user: %45
  %45 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %44 : $UnsafePointer<UInt8> // user: %52
  %46 = integer_literal $Builtin.Word, 106        // user: %48
  %47 = pointer_to_address %43 : $Builtin.RawPointer to [strict] $*UInt8 // user: %48
  %48 = index_addr %47 : $*UInt8, %46 : $Builtin.Word // user: %49
  %49 = address_to_pointer %48 : $*UInt8 to $Builtin.RawPointer // user: %50
  %50 = struct $UnsafePointer<UInt8> (%49 : $Builtin.RawPointer) // user: %51
  %51 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %50 : $UnsafePointer<UInt8> // user: %52
  %52 = struct $UnsafeBufferPointer<UInt8> (%45 : $Optional<UnsafePointer<UInt8>>, %51 : $Optional<UnsafePointer<UInt8>>) // user: %53
  %53 = apply %39(%52, %29, %38, %8, %10) : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> ()
  br bb5                                          // id: %54

bb5:                                              // Preds: bb4
  %55 = builtin "int_trap"() : $Never
  unreachable                                     // id: %56

bb6:                                              // Preds: bb3
  %57 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %59
  %58 = integer_literal $Builtin.Word, 57         // user: %60
  %59 = builtin "ptrtoint_Word"(%57 : $Builtin.RawPointer) : $Builtin.Word // user: %60
  %60 = struct $StaticString (%59 : $Builtin.Word, %58 : $Builtin.Word, %14 : $Builtin.Int8) // user: %69
  %61 = integer_literal $Builtin.Int64, 70        // user: %62
  %62 = struct $UInt (%61 : $Builtin.Int64)       // user: %69
  %63 = string_literal utf8 "Fatal error"         // user: %65
  %64 = integer_literal $Builtin.Word, 11         // user: %66
  %65 = builtin "ptrtoint_Word"(%63 : $Builtin.RawPointer) : $Builtin.Word // user: %66
  %66 = struct $StaticString (%65 : $Builtin.Word, %64 : $Builtin.Word, %14 : $Builtin.Int8) // user: %69
  %67 = struct $UInt32 (%11 : $Builtin.Int32)     // user: %69
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %68 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %69
  %69 = apply %68(%66, %60, %18, %62, %67) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %70

bb7:                                              // Preds: bb2
  %71 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %73
  %72 = integer_literal $Builtin.Word, 57         // user: %74
  %73 = builtin "ptrtoint_Word"(%71 : $Builtin.RawPointer) : $Builtin.Word // user: %74
  %74 = struct $StaticString (%73 : $Builtin.Word, %72 : $Builtin.Word, %14 : $Builtin.Int8) // user: %83
  %75 = integer_literal $Builtin.Int64, 70        // user: %76
  %76 = struct $UInt (%75 : $Builtin.Int64)       // user: %83
  %77 = string_literal utf8 "Fatal error"         // user: %79
  %78 = integer_literal $Builtin.Word, 11         // user: %80
  %79 = builtin "ptrtoint_Word"(%77 : $Builtin.RawPointer) : $Builtin.Word // user: %80
  %80 = struct $StaticString (%79 : $Builtin.Word, %78 : $Builtin.Word, %14 : $Builtin.Int8) // user: %83
  %81 = struct $UInt32 (%11 : $Builtin.Int32)     // user: %83
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %82 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %83
  %83 = apply %82(%80, %74, %18, %76, %81) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %84

bb8:                                              // Preds: bb1
  %85 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %87
  %86 = integer_literal $Builtin.Word, 57         // user: %88
  %87 = builtin "ptrtoint_Word"(%85 : $Builtin.RawPointer) : $Builtin.Word // user: %88
  %88 = struct $StaticString (%87 : $Builtin.Word, %86 : $Builtin.Word, %14 : $Builtin.Int8) // user: %97
  %89 = integer_literal $Builtin.Int64, 70        // user: %90
  %90 = struct $UInt (%89 : $Builtin.Int64)       // user: %97
  %91 = string_literal utf8 "Fatal error"         // user: %93
  %92 = integer_literal $Builtin.Word, 11         // user: %94
  %93 = builtin "ptrtoint_Word"(%91 : $Builtin.RawPointer) : $Builtin.Word // user: %94
  %94 = struct $StaticString (%93 : $Builtin.Word, %92 : $Builtin.Word, %14 : $Builtin.Int8) // user: %97
  %95 = struct $UInt32 (%11 : $Builtin.Int32)     // user: %97
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %96 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %97
  %97 = apply %96(%94, %88, %18, %90, %95) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %98
} // end sil function '$Ss27_ContiguousArrayStorageBaseCABycfc'

// _ContiguousArrayStorageBase.withUnsafeBufferOfObjects<A>(_:)
sil public_external [serialized] @$Ss27_ContiguousArrayStorageBaseC25withUnsafeBufferOfObjectsyxxSRyyXlGKXEKlF : $@convention(method) <R> (@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), @guaranteed _ContiguousArrayStorageBase) -> (@out R, @error Error) {
// %0                                             // user: %15
// %1                                             // user: %5
// %2                                             // users: %5, %4
bb0(%0 : $*R, %1 : $@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), %2 : $_ContiguousArrayStorageBase):
  %3 = alloc_stack $Optional<R>                   // users: %16, %14, %12, %11, %10, %7, %5
  %4 = class_method %2 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer!1 : <R> (_ContiguousArrayStorageBase) -> ((UnsafeBufferPointer<AnyObject>) throws -> R) throws -> R?, $@convention(method) <τ_0_0> (@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out τ_0_0, @error Error), @guaranteed _ContiguousArrayStorageBase) -> (@out Optional<τ_0_0>, @error Error) // user: %5
  try_apply %4<R>(%3, %1, %2) : $@convention(method) <τ_0_0> (@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out τ_0_0, @error Error), @guaranteed _ContiguousArrayStorageBase) -> (@out Optional<τ_0_0>, @error Error), normal bb2, error bb1 // id: %5

// %6                                             // user: %8
bb1(%6 : $Error):                                 // Preds: bb0
  dealloc_stack %3 : $*Optional<R>                // id: %7
  throw %6 : $Error                               // id: %8

bb2(%9 : $()):                                    // Preds: bb0
  switch_enum_addr %3 : $*Optional<R>, case #Optional.some!enumelt.1: bb4, case #Optional.none!enumelt: bb3 // id: %10

bb3:                                              // Preds: bb2
  destroy_addr %3 : $*Optional<R>                 // id: %11
  dealloc_stack %3 : $*Optional<R>                // id: %12
  unreachable                                     // id: %13

bb4:                                              // Preds: bb2
  %14 = unchecked_take_enum_data_addr %3 : $*Optional<R>, #Optional.some!enumelt.1 // user: %15
  copy_addr [take] %14 to [initialization] %0 : $*R // id: %15
  dealloc_stack %3 : $*Optional<R>                // id: %16
  %17 = tuple ()                                  // user: %18
  return %17 : $()                                // id: %18
} // end sil function '$Ss27_ContiguousArrayStorageBaseC25withUnsafeBufferOfObjectsyxxSRyyXlGKXEKlF'

// _ContiguousArrayStorage.init(_doNotCallMeBase:)
sil public_external [serialized] @$Ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>) -> @owned _ContiguousArrayStorage<Element> {
bb0(%0 : $_ContiguousArrayStorage<Element>):
  unreachable                                     // id: %1
} // end sil function '$Ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc'

// _ContiguousArrayStorage._withVerbatimBridgedUnsafeBuffer<A>(_:)
sil public_external [serialized] @$Ss23_ContiguousArrayStorageC32_withVerbatimBridgedUnsafeBufferyqd__Sgqd__SRyyXlGKXEKlF : $@convention(method) <Element><R> (@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), @guaranteed _ContiguousArrayStorage<Element>) -> (@out Optional<R>, @error Error) {
// %0                                             // users: %52, %48, %5
// %1                                             // user: %44
// %2                                             // users: %54, %47, %35, %27
bb0(%0 : $*Optional<R>, %1 : $@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), %2 : $_ContiguousArrayStorage<Element>):
  %3 = alloc_stack $Optional<R>                   // users: %6, %5, %4
  inject_enum_addr %3 : $*Optional<R>, #Optional.none!enumelt // id: %4
  copy_addr [take] %3 to [initialization] %0 : $*Optional<R> // id: %5
  dealloc_stack %3 : $*Optional<R>                // id: %6
  %7 = metatype $@thick Element.Type              // users: %16, %8
  %8 = builtin "canBeClass"<Element>(%7 : $@thick Element.Type) : $Builtin.Int8 // users: %13, %10
  %9 = integer_literal $Builtin.Int8, 0           // user: %10
  %10 = builtin "cmp_eq_Int8"(%8 : $Builtin.Int8, %9 : $Builtin.Int8) : $Builtin.Int1 // user: %11
  cond_br %10, bb4, bb1                           // id: %11

bb1:                                              // Preds: bb0
  %12 = integer_literal $Builtin.Int8, 1          // user: %13
  %13 = builtin "cmp_eq_Int8"(%8 : $Builtin.Int8, %12 : $Builtin.Int8) : $Builtin.Int1 // user: %14
  cond_br %13, bb3, bb2                           // id: %14

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %15 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %16
  %16 = apply %15<Element>(%7) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %17
  br bb5(%16 : $Bool)                             // id: %17

bb3:                                              // Preds: bb1
  %18 = integer_literal $Builtin.Int1, -1         // user: %19
  %19 = struct $Bool (%18 : $Builtin.Int1)        // user: %20
  br bb5(%19 : $Bool)                             // id: %20

bb4:                                              // Preds: bb0
  %21 = integer_literal $Builtin.Int1, 0          // user: %22
  %22 = struct $Bool (%21 : $Builtin.Int1)        // user: %23
  br bb5(%22 : $Bool)                             // id: %23

// %24                                            // user: %25
bb5(%24 : $Bool):                                 // Preds: bb4 bb3 bb2
  %25 = struct_extract %24 : $Bool, #Bool._value  // user: %26
  cond_br %25, bb6, bb9                           // id: %26

bb6:                                              // Preds: bb5
  %27 = upcast %2 : $_ContiguousArrayStorage<Element> to $_ContiguousArrayStorageBase // user: %28
  %28 = ref_element_addr %27 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %29
  %29 = struct_element_addr %28 : $*_ArrayBody, #_ArrayBody._storage // user: %30
  %30 = struct_element_addr %29 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count // user: %31
  %31 = struct_element_addr %30 : $*Int, #Int._value // user: %32
  %32 = load %31 : $*Builtin.Int64                // user: %33
  %33 = builtin "assumeNonNegative_Int64"(%32 : $Builtin.Int64) : $Builtin.Int64 // user: %34
  %34 = struct $Int (%33 : $Builtin.Int64)        // user: %41
  %35 = ref_tail_addr %2 : $_ContiguousArrayStorage<Element>, $Element // user: %36
  %36 = address_to_pointer %35 : $*Element to $Builtin.RawPointer // user: %38
  %37 = metatype $@thin UnsafeBufferPointer<AnyObject>.Type // user: %41
  %38 = struct $UnsafePointer<AnyObject> (%36 : $Builtin.RawPointer) // user: %39
  %39 = enum $Optional<UnsafePointer<AnyObject>>, #Optional.some!enumelt.1, %38 : $UnsafePointer<AnyObject> // user: %41
  // function_ref specialized UnsafeBufferPointer.init(start:count:)
  %40 = function_ref @$SSR5start5countSRyxGSPyxGSg_SitcfCyXl_Tgq5 : $@convention(method) (Optional<UnsafePointer<AnyObject>>, Int, @thin UnsafeBufferPointer<AnyObject>.Type) -> UnsafeBufferPointer<AnyObject> // user: %41
  %41 = apply %40(%39, %34, %37) : $@convention(method) (Optional<UnsafePointer<AnyObject>>, Int, @thin UnsafeBufferPointer<AnyObject>.Type) -> UnsafeBufferPointer<AnyObject> // user: %44
  %42 = alloc_stack $Optional<R>                  // users: %53, %52, %51, %46, %43
  %43 = init_enum_data_addr %42 : $*Optional<R>, #Optional.some!enumelt.1 // user: %44
  try_apply %1(%43, %41) : $@noescape @callee_guaranteed (UnsafeBufferPointer<AnyObject>) -> (@out R, @error Error), normal bb8, error bb7 // id: %44

// %45                                            // user: %49
bb7(%45 : $Error):                                // Preds: bb6
  dealloc_stack %42 : $*Optional<R>               // id: %46
  fix_lifetime %2 : $_ContiguousArrayStorage<Element> // id: %47
  destroy_addr %0 : $*Optional<R>                 // id: %48
  throw %45 : $Error                              // id: %49

bb8(%50 : $()):                                   // Preds: bb6
  inject_enum_addr %42 : $*Optional<R>, #Optional.some!enumelt.1 // id: %51
  copy_addr [take] %42 to %0 : $*Optional<R>      // id: %52
  dealloc_stack %42 : $*Optional<R>               // id: %53
  fix_lifetime %2 : $_ContiguousArrayStorage<Element> // id: %54
  br bb9                                          // id: %55

bb9:                                              // Preds: bb8 bb5
  %56 = tuple ()                                  // user: %57
  return %56 : $()                                // id: %57
} // end sil function '$Ss23_ContiguousArrayStorageC32_withVerbatimBridgedUnsafeBufferyqd__Sgqd__SRyyXlGKXEKlF'

// _ContiguousArrayStorage._getNonVerbatimBridgedCount()
sil public_external [serialized] @$Ss23_ContiguousArrayStorageC27_getNonVerbatimBridgedCountSiyF : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> Int {
// %0                                             // user: %1
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = upcast %0 : $_ContiguousArrayStorage<Element> to $_ContiguousArrayStorageBase // user: %2
  %2 = ref_element_addr %1 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %3
  %3 = struct_element_addr %2 : $*_ArrayBody, #_ArrayBody._storage // user: %4
  %4 = struct_element_addr %3 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count // user: %5
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %7
  %7 = builtin "assumeNonNegative_Int64"(%6 : $Builtin.Int64) : $Builtin.Int64 // user: %8
  %8 = struct $Int (%7 : $Builtin.Int64)          // user: %9
  return %8 : $Int                                // id: %9
} // end sil function '$Ss23_ContiguousArrayStorageC27_getNonVerbatimBridgedCountSiyF'

// _ContiguousArrayStorage._getNonVerbatimBridgedHeapBuffer()
sil public_external [serialized] @$Ss23_ContiguousArrayStorageC32_getNonVerbatimBridgedHeapBuffers07ManagedI7PointerVys01_hI6HeaderVySiGyXlGyF : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @owned ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> {
// %0                                             // users: %221, %76, %1
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = upcast %0 : $_ContiguousArrayStorage<Element> to $_ContiguousArrayStorageBase // user: %2
  %2 = ref_element_addr %1 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %3
  %3 = struct_element_addr %2 : $*_ArrayBody, #_ArrayBody._storage // user: %4
  %4 = struct_element_addr %3 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count // user: %5
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %7
  %7 = builtin "assumeNonNegative_Int64"(%6 : $Builtin.Int64) : $Builtin.Int64 // users: %203, %117, %94, %77, %8
  %8 = struct $Int (%7 : $Builtin.Int64)          // users: %64, %13
  %9 = metatype $@thin ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>.Type // user: %13
  %10 = metatype $@thick ManagedBuffer<_HeapBufferHeader<Int>, AnyObject>.Type // user: %11
  %11 = init_existential_metatype %10 : $@thick ManagedBuffer<_HeapBufferHeader<Int>, AnyObject>.Type, $@thick AnyObject.Type // user: %13
  // function_ref specialized ManagedBufferPointer.init(_uncheckedBufferClass:minimumCapacity:)
  %12 = function_ref @$Ss20ManagedBufferPointerV010_uncheckedB5Class15minimumCapacityAByxq_GyXlXp_SitcfCs05_HeapB6HeaderVySiG_yXlTgq5 : $@convention(method) (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>.Type) -> @owned ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> // user: %13
  %13 = apply %12(%11, %8, %9) : $@convention(method) (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>.Type) -> @owned ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> // users: %222, %63, %14
  %14 = struct_extract %13 : $ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>, #ManagedBufferPointer._nativeBuffer // users: %237, %16
  %15 = builtin "onFastPath"() : $()
  %16 = ref_to_raw_pointer %14 : $Builtin.NativeObject to $Builtin.RawPointer // user: %61
  %17 = builtin "onFastPath"() : $()
  %18 = metatype $@thick HeapObject.Type          // user: %19
  %19 = builtin "sizeof"<HeapObject>(%18 : $@thick HeapObject.Type) : $Builtin.Word // user: %20
  %20 = builtin "zextOrBitCast_Word_Int64"(%19 : $Builtin.Word) : $Builtin.Int64 // user: %25
  %21 = metatype $@thick _HeapBufferHeader<Int>.Type // user: %22
  %22 = builtin "alignof"<_HeapBufferHeader<Int>>(%21 : $@thick _HeapBufferHeader<Int>.Type) : $Builtin.Word // user: %23
  %23 = builtin "zextOrBitCast_Word_Int64"(%22 : $Builtin.Word) : $Builtin.Int64 // users: %33, %25
  %24 = integer_literal $Builtin.Int1, -1         // users: %178, %156, %150, %128, %118, %95, %25
  %25 = builtin "uadd_with_overflow_Int64"(%20 : $Builtin.Int64, %23 : $Builtin.Int64, %24 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %27, %26
  %26 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 0 // user: %31
  %27 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 1 // user: %28
  cond_fail %27 : $Builtin.Int1                   // id: %28
  %29 = integer_literal $Builtin.Int64, 1         // users: %128, %38, %33, %31
  %30 = integer_literal $Builtin.Int1, 0          // users: %152, %109, %74, %58, %38, %36, %33, %31
  %31 = builtin "usub_with_overflow_Int64"(%26 : $Builtin.Int64, %29 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %32
  %32 = tuple_extract %31 : $(Builtin.Int64, Builtin.Int1), 0 // user: %40
  %33 = builtin "usub_with_overflow_Int64"(%23 : $Builtin.Int64, %29 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %34
  %34 = tuple_extract %33 : $(Builtin.Int64, Builtin.Int1), 0 // user: %36
  %35 = integer_literal $Builtin.Int64, 0         // users: %108, %92, %89, %77, %71, %55, %36
  %36 = builtin "usub_with_overflow_Int64"(%35 : $Builtin.Int64, %34 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %37
  %37 = tuple_extract %36 : $(Builtin.Int64, Builtin.Int1), 0 // user: %38
  %38 = builtin "usub_with_overflow_Int64"(%37 : $Builtin.Int64, %29 : $Builtin.Int64, %30 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %39
  %39 = tuple_extract %38 : $(Builtin.Int64, Builtin.Int1), 0 // user: %40
  %40 = builtin "and_Int64"(%32 : $Builtin.Int64, %39 : $Builtin.Int64) : $Builtin.Int64 // users: %73, %71, %60, %57, %55
  %41 = string_literal utf8 "Not enough bits to represent a signed value" // user: %43
  %42 = integer_literal $Builtin.Word, 43         // user: %45
  %43 = builtin "ptrtoint_Word"(%41 : $Builtin.RawPointer) : $Builtin.Word // user: %45
  %44 = integer_literal $Builtin.Int8, 2          // users: %234, %226, %216, %208, %183, %170, %166, %123, %114, %104, %100, %86, %82, %49, %45
  %45 = struct $StaticString (%43 : $Builtin.Word, %42 : $Builtin.Word, %44 : $Builtin.Int8) // users: %238, %229
  %46 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %48
  %47 = integer_literal $Builtin.Word, 131        // user: %49
  %48 = builtin "ptrtoint_Word"(%46 : $Builtin.RawPointer) : $Builtin.Word // user: %49
  %49 = struct $StaticString (%48 : $Builtin.Word, %47 : $Builtin.Word, %44 : $Builtin.Int8) // users: %238, %229
  %50 = integer_literal $Builtin.Int64, 3555      // user: %51
  %51 = struct $UInt (%50 : $Builtin.Int64)       // users: %238, %229
  %52 = integer_literal $Builtin.Int32, 0         // users: %235, %227, %217, %209, %184, %124
  br bb1                                          // id: %53

bb1:                                              // Preds: bb0
  %54 = integer_literal $Builtin.Int64, 9223372036854775807 // user: %57
  %55 = builtin "cmp_slt_Int64"(%40 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1 // user: %56
  cond_br %55, bb2, bb3                           // id: %56

bb2:                                              // Preds: bb1
  %57 = builtin "cmp_ult_Int64"(%54 : $Builtin.Int64, %40 : $Builtin.Int64) : $Builtin.Int1 // user: %58
  %58 = builtin "int_expect_Int1"(%57 : $Builtin.Int1, %30 : $Builtin.Int1) : $Builtin.Int1 // user: %59
  cond_br %58, bb32, bb3                          // id: %59

bb3:                                              // Preds: bb2 bb1
  %60 = builtin "truncOrBitCast_Int64_Word"(%40 : $Builtin.Int64) : $Builtin.Word // user: %61
  %61 = index_raw_pointer %16 : $Builtin.RawPointer, %60 : $Builtin.Word // user: %65
  // function_ref specialized ManagedBufferPointer._elementPointer.getter
  %62 = function_ref @$Ss20ManagedBufferPointerV08_elementC0Spyq_Gvgs05_HeapB6HeaderVySiG_yXlTgq5 : $@convention(method) (@guaranteed ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>) -> UnsafeMutablePointer<AnyObject> // user: %63
  %63 = apply %62(%13) : $@convention(method) (@guaranteed ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>) -> UnsafeMutablePointer<AnyObject> // user: %132
  %64 = struct $_HeapBufferHeader<Int> (%8 : $Int) // user: %66
  %65 = pointer_to_address %61 : $Builtin.RawPointer to [strict] $*_HeapBufferHeader<Int> // user: %66
  store %64 to %65 : $*_HeapBufferHeader<Int>     // id: %66
  %67 = builtin "onFastPath"() : $()
  %68 = builtin "onFastPath"() : $()
  br bb4                                          // id: %69

bb4:                                              // Preds: bb3
  %70 = integer_literal $Builtin.Int64, 9223372036854775807 // user: %73
  %71 = builtin "cmp_slt_Int64"(%40 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1 // user: %72
  cond_br %71, bb5, bb6                           // id: %72

bb5:                                              // Preds: bb4
  %73 = builtin "cmp_ult_Int64"(%70 : $Builtin.Int64, %40 : $Builtin.Int64) : $Builtin.Int1 // user: %74
  %74 = builtin "int_expect_Int1"(%73 : $Builtin.Int1, %30 : $Builtin.Int1) : $Builtin.Int1 // user: %75
  cond_br %74, bb31, bb6                          // id: %75

bb6:                                              // Preds: bb5 bb4
  %76 = ref_tail_addr %0 : $_ContiguousArrayStorage<Element>, $Element // user: %136
  %77 = builtin "cmp_eq_Int64"(%7 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1 // user: %78
  cond_br %77, bb30, bb7                          // id: %78

bb7:                                              // Preds: bb6
  %79 = string_literal utf8 "Index out of range"  // user: %81
  %80 = integer_literal $Builtin.Word, 18         // user: %82
  %81 = builtin "ptrtoint_Word"(%79 : $Builtin.RawPointer) : $Builtin.Word // user: %82
  %82 = struct $StaticString (%81 : $Builtin.Word, %80 : $Builtin.Word, %44 : $Builtin.Int8) // user: %219
  %83 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/Range.swift" // user: %85
  %84 = integer_literal $Builtin.Word, 93         // user: %86
  %85 = builtin "ptrtoint_Word"(%83 : $Builtin.RawPointer) : $Builtin.Word // user: %86
  %86 = struct $StaticString (%85 : $Builtin.Word, %84 : $Builtin.Word, %44 : $Builtin.Int8) // user: %219
  %87 = integer_literal $Builtin.Int64, 271       // user: %88
  %88 = struct $UInt (%87 : $Builtin.Int64)       // user: %219
  br bb8(%35 : $Builtin.Int64)                    // id: %89

// %90                                            // users: %133, %128, %117, %108, %94, %92
bb8(%90 : $Builtin.Int64):                        // Preds: bb27 bb7
  br bb9                                          // id: %91

bb9:                                              // Preds: bb8
  %92 = builtin "cmp_slt_Int64"(%90 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1 // user: %93
  cond_br %92, bb29, bb10                         // id: %93

bb10:                                             // Preds: bb9
  %94 = builtin "cmp_slt_Int64"(%90 : $Builtin.Int64, %7 : $Builtin.Int64) : $Builtin.Int1 // user: %95
  %95 = builtin "int_expect_Int1"(%94 : $Builtin.Int1, %24 : $Builtin.Int1) : $Builtin.Int1 // user: %96
  cond_br %95, bb11, bb29                         // id: %96

bb11:                                             // Preds: bb10
  %97 = string_literal utf8 "Out of bounds: index < startIndex" // user: %99
  %98 = integer_literal $Builtin.Word, 33         // user: %100
  %99 = builtin "ptrtoint_Word"(%97 : $Builtin.RawPointer) : $Builtin.Word // user: %100
  %100 = struct $StaticString (%99 : $Builtin.Word, %98 : $Builtin.Word, %44 : $Builtin.Int8) // user: %211
  %101 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/Collection.swift" // user: %103
  %102 = integer_literal $Builtin.Word, 98        // user: %104
  %103 = builtin "ptrtoint_Word"(%101 : $Builtin.RawPointer) : $Builtin.Word // user: %104
  %104 = struct $StaticString (%103 : $Builtin.Word, %102 : $Builtin.Word, %44 : $Builtin.Int8) // users: %211, %126
  %105 = integer_literal $Builtin.Int64, 812      // user: %106
  %106 = struct $UInt (%105 : $Builtin.Int64)     // user: %211
  br bb12                                         // id: %107

bb12:                                             // Preds: bb11
  %108 = builtin "cmp_slt_Int64"(%90 : $Builtin.Int64, %35 : $Builtin.Int64) : $Builtin.Int1 // user: %109
  %109 = builtin "int_expect_Int1"(%108 : $Builtin.Int1, %30 : $Builtin.Int1) : $Builtin.Int1 // user: %110
  cond_br %109, bb28, bb13                        // id: %110

bb13:                                             // Preds: bb12
  %111 = string_literal utf8 "Out of bounds: index >= endIndex" // user: %113
  %112 = integer_literal $Builtin.Word, 32        // user: %114
  %113 = builtin "ptrtoint_Word"(%111 : $Builtin.RawPointer) : $Builtin.Word // user: %114
  %114 = struct $StaticString (%113 : $Builtin.Word, %112 : $Builtin.Word, %44 : $Builtin.Int8) // user: %126
  %115 = integer_literal $Builtin.Int64, 815      // user: %116
  %116 = struct $UInt (%115 : $Builtin.Int64)     // user: %126
  %117 = builtin "cmp_slt_Int64"(%90 : $Builtin.Int64, %7 : $Builtin.Int64) : $Builtin.Int1 // user: %118
  %118 = builtin "int_expect_Int1"(%117 : $Builtin.Int1, %24 : $Builtin.Int1) : $Builtin.Int1 // user: %119
  cond_br %118, bb15, bb14                        // id: %119

bb14:                                             // Preds: bb13
  %120 = string_literal utf8 "Fatal error"        // user: %122
  %121 = integer_literal $Builtin.Word, 11        // user: %123
  %122 = builtin "ptrtoint_Word"(%120 : $Builtin.RawPointer) : $Builtin.Word // user: %123
  %123 = struct $StaticString (%122 : $Builtin.Word, %121 : $Builtin.Word, %44 : $Builtin.Int8) // user: %126
  %124 = struct $UInt32 (%52 : $Builtin.Int32)    // user: %126
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %125 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %126
  %126 = apply %125(%123, %114, %104, %116, %124) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %127

bb15:                                             // Preds: bb13
  %128 = builtin "sadd_with_overflow_Int64"(%90 : $Builtin.Int64, %29 : $Builtin.Int64, %24 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %130, %129
  %129 = tuple_extract %128 : $(Builtin.Int64, Builtin.Int1), 0 // users: %204, %203
  %130 = tuple_extract %128 : $(Builtin.Int64, Builtin.Int1), 1 // user: %131
  cond_fail %130 : $Builtin.Int1                  // id: %131
  %132 = struct_extract %63 : $UnsafeMutablePointer<AnyObject>, #UnsafeMutablePointer._rawValue // user: %134
  %133 = builtin "truncOrBitCast_Int64_Word"(%90 : $Builtin.Int64) : $Builtin.Word // users: %136, %135
  %134 = pointer_to_address %132 : $Builtin.RawPointer to [strict] $*AnyObject // user: %135
  %135 = index_addr %134 : $*AnyObject, %133 : $Builtin.Word // user: %202
  %136 = index_addr %76 : $*Element, %133 : $Builtin.Word // user: %138
  %137 = alloc_stack $Element                     // users: %201, %188, %162, %159, %138
  copy_addr %136 to [initialization] %137 : $*Element // id: %138
  %139 = metatype $@thick Element.Type            // users: %174, %148, %140
  %140 = builtin "canBeClass"<Element>(%139 : $@thick Element.Type) : $Builtin.Int8 // users: %145, %142
  %141 = integer_literal $Builtin.Int8, 0         // user: %142
  %142 = builtin "cmp_eq_Int8"(%140 : $Builtin.Int8, %141 : $Builtin.Int8) : $Builtin.Int1 // user: %143
  cond_br %142, bb19, bb16                        // id: %143

bb16:                                             // Preds: bb15
  %144 = integer_literal $Builtin.Int8, 1         // user: %145
  %145 = builtin "cmp_eq_Int8"(%140 : $Builtin.Int8, %144 : $Builtin.Int8) : $Builtin.Int1 // user: %146
  cond_br %145, bb18, bb17                        // id: %146

bb17:                                             // Preds: bb16
  // function_ref _swift_isClassOrObjCExistentialType
  %147 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %148
  %148 = apply %147<Element>(%139) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %149
  br bb20(%148 : $Bool)                           // id: %149

bb18:                                             // Preds: bb16
  %150 = struct $Bool (%24 : $Builtin.Int1)       // user: %151
  br bb20(%150 : $Bool)                           // id: %151

bb19:                                             // Preds: bb15
  %152 = struct $Bool (%30 : $Builtin.Int1)       // user: %153
  br bb20(%152 : $Bool)                           // id: %153

// %154                                           // user: %155
bb20(%154 : $Bool):                               // Preds: bb19 bb18 bb17
  %155 = struct_extract %154 : $Bool, #Bool._value // user: %156
  %156 = builtin "int_expect_Int1"(%155 : $Builtin.Int1, %24 : $Builtin.Int1) : $Builtin.Int1 // user: %157
  cond_br %156, bb22, bb21                        // id: %157

bb21:                                             // Preds: bb20
  // function_ref _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)
  %158 = function_ref @$Ss38_bridgeAnythingNonVerbatimToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject // user: %159
  %159 = apply %158<Element>(%137) : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject // user: %160
  br bb27(%159 : $AnyObject)                      // id: %160

bb22:                                             // Preds: bb20
  %161 = alloc_stack $Element                     // users: %198, %197, %191, %162
  copy_addr %137 to [initialization] %161 : $*Element // id: %162
  %163 = string_literal utf8 "Can't unsafeBitCast between types of different sizes" // user: %165
  %164 = integer_literal $Builtin.Word, 52        // user: %166
  %165 = builtin "ptrtoint_Word"(%163 : $Builtin.RawPointer) : $Builtin.Word // user: %166
  %166 = struct $StaticString (%165 : $Builtin.Word, %164 : $Builtin.Word, %44 : $Builtin.Int8) // user: %186
  %167 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/Builtin.swift" // user: %169
  %168 = integer_literal $Builtin.Word, 95        // user: %170
  %169 = builtin "ptrtoint_Word"(%167 : $Builtin.RawPointer) : $Builtin.Word // user: %170
  %170 = struct $StaticString (%169 : $Builtin.Word, %168 : $Builtin.Word, %44 : $Builtin.Int8) // user: %186
  %171 = integer_literal $Builtin.Int64, 87       // user: %172
  %172 = struct $UInt (%171 : $Builtin.Int64)     // user: %186
  br bb23                                         // id: %173

bb23:                                             // Preds: bb22
  %174 = builtin "sizeof"<Element>(%139 : $@thick Element.Type) : $Builtin.Word // user: %177
  %175 = metatype $@thick AnyObject.Protocol      // user: %176
  %176 = builtin "sizeof"<AnyObject>(%175 : $@thick AnyObject.Protocol) : $Builtin.Word // user: %177
  %177 = builtin "cmp_eq_Word"(%174 : $Builtin.Word, %176 : $Builtin.Word) : $Builtin.Int1 // user: %178
  %178 = builtin "int_expect_Int1"(%177 : $Builtin.Int1, %24 : $Builtin.Int1) : $Builtin.Int1 // user: %179
  cond_br %178, bb25, bb24                        // id: %179

bb24:                                             // Preds: bb23
  %180 = string_literal utf8 "Fatal error"        // user: %182
  %181 = integer_literal $Builtin.Word, 11        // user: %183
  %182 = builtin "ptrtoint_Word"(%180 : $Builtin.RawPointer) : $Builtin.Word // user: %183
  %183 = struct $StaticString (%182 : $Builtin.Word, %181 : $Builtin.Word, %44 : $Builtin.Int8) // user: %186
  %184 = struct $UInt32 (%52 : $Builtin.Int32)    // user: %186
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %185 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %186
  %186 = apply %185(%183, %166, %170, %172, %184) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %187

bb25:                                             // Preds: bb23
  destroy_addr %137 : $*Element                   // id: %188
  br bb26                                         // id: %189

bb26:                                             // Preds: bb25
  %190 = alloc_stack $Element                     // users: %196, %195, %192, %191
  copy_addr %161 to [initialization] %190 : $*Element // id: %191
  %192 = unchecked_addr_cast %190 : $*Element to $*AnyObject // user: %193
  %193 = load %192 : $*AnyObject                  // users: %199, %194
  strong_retain %193 : $AnyObject                 // id: %194
  destroy_addr %190 : $*Element                   // id: %195
  dealloc_stack %190 : $*Element                  // id: %196
  destroy_addr %161 : $*Element                   // id: %197
  dealloc_stack %161 : $*Element                  // id: %198
  br bb27(%193 : $AnyObject)                      // id: %199

// %200                                           // user: %202
bb27(%200 : $AnyObject):                          // Preds: bb26 bb21
  dealloc_stack %137 : $*Element                  // id: %201
  store %200 to %135 : $*AnyObject                // id: %202
  %203 = builtin "cmp_eq_Int64"(%129 : $Builtin.Int64, %7 : $Builtin.Int64) : $Builtin.Int1 // user: %204
  cond_br %203, bb30, bb8(%129 : $Builtin.Int64)  // id: %204

bb28:                                             // Preds: bb12
  %205 = string_literal utf8 "Fatal error"        // user: %207
  %206 = integer_literal $Builtin.Word, 11        // user: %208
  %207 = builtin "ptrtoint_Word"(%205 : $Builtin.RawPointer) : $Builtin.Word // user: %208
  %208 = struct $StaticString (%207 : $Builtin.Word, %206 : $Builtin.Word, %44 : $Builtin.Int8) // user: %211
  %209 = struct $UInt32 (%52 : $Builtin.Int32)    // user: %211
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %210 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %211
  %211 = apply %210(%208, %100, %104, %106, %209) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %212

bb29:                                             // Preds: bb10 bb9
  %213 = string_literal utf8 "Fatal error"        // user: %215
  %214 = integer_literal $Builtin.Word, 11        // user: %216
  %215 = builtin "ptrtoint_Word"(%213 : $Builtin.RawPointer) : $Builtin.Word // user: %216
  %216 = struct $StaticString (%215 : $Builtin.Word, %214 : $Builtin.Word, %44 : $Builtin.Int8) // user: %219
  %217 = struct $UInt32 (%52 : $Builtin.Int32)    // user: %219
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %218 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %219
  %219 = apply %218(%216, %82, %86, %88, %217) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %220

bb30:                                             // Preds: bb27 bb6
  fix_lifetime %0 : $_ContiguousArrayStorage<Element> // id: %221
  return %13 : $ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> // id: %222

bb31:                                             // Preds: bb5
  %223 = string_literal utf8 "Fatal error"        // user: %225
  %224 = integer_literal $Builtin.Word, 11        // user: %226
  %225 = builtin "ptrtoint_Word"(%223 : $Builtin.RawPointer) : $Builtin.Word // user: %226
  %226 = struct $StaticString (%225 : $Builtin.Word, %224 : $Builtin.Word, %44 : $Builtin.Int8) // user: %229
  %227 = struct $UInt32 (%52 : $Builtin.Int32)    // user: %229
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %228 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %229
  %229 = apply %228(%226, %45, %49, %51, %227) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %230

bb32:                                             // Preds: bb2
  %231 = string_literal utf8 "Fatal error"        // user: %233
  %232 = integer_literal $Builtin.Word, 11        // user: %234
  %233 = builtin "ptrtoint_Word"(%231 : $Builtin.RawPointer) : $Builtin.Word // user: %234
  %234 = struct $StaticString (%233 : $Builtin.Word, %232 : $Builtin.Word, %44 : $Builtin.Int8) // user: %238
  %235 = struct $UInt32 (%52 : $Builtin.Int32)    // user: %238
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %236 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %238
  strong_retain %14 : $Builtin.NativeObject       // id: %237
  %238 = apply %236(%234, %45, %49, %51, %235) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %239
} // end sil function '$Ss23_ContiguousArrayStorageC32_getNonVerbatimBridgedHeapBuffers07ManagedI7PointerVys01_hI6HeaderVySiGyXlGyF'

// _ContiguousArrayStorage.canStoreElements(ofDynamicType:)
sil public_external [serialized] @$Ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF : $@convention(method) <Element> (@thick Any.Type, @guaranteed _ContiguousArrayStorage<Element>) -> Bool {
// %0                                             // user: %2
bb0(%0 : $@thick Any.Type, %1 : $_ContiguousArrayStorage<Element>):
  checked_cast_br %0 : $@thick Any.Type to $@thick Element.Type, bb2, bb1 // id: %2

bb1:                                              // Preds: bb0
  %3 = integer_literal $Builtin.Int1, 0           // user: %4
  br bb3(%3 : $Builtin.Int1)                      // id: %4

bb2(%5 : $@thick Element.Type):                   // Preds: bb0
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  br bb3(%6 : $Builtin.Int1)                      // id: %7

// %8                                             // user: %9
bb3(%8 : $Builtin.Int1):                          // Preds: bb2 bb1
  %9 = struct $Bool (%8 : $Builtin.Int1)          // user: %10
  return %9 : $Bool                               // id: %10
} // end sil function '$Ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF'

// _ContiguousArrayStorage.staticElementType.getter
sil public_external [serialized] @$Ss23_ContiguousArrayStorageC17staticElementTypeypXpvg : $@convention(method) <Element> (@guaranteed _ContiguousArrayStorage<Element>) -> @thick Any.Type {
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = metatype $@thick Element.Type              // user: %2
  %2 = init_existential_metatype %1 : $@thick Element.Type, $@thick Any.Type // user: %3
  return %2 : $@thick Any.Type                    // id: %3
} // end sil function '$Ss23_ContiguousArrayStorageC17staticElementTypeypXpvg'

// _ContiguousArrayStorage.__deallocating_deinit
sil public_external [serialized] @$Ss23_ContiguousArrayStorageCfD : $@convention(method) <Element> (@owned _ContiguousArrayStorage<Element>) -> () {
// %0                                             // users: %14, %13, %3, %1
bb0(%0 : $_ContiguousArrayStorage<Element>):
  %1 = ref_tail_addr %0 : $_ContiguousArrayStorage<Element>, $Element // user: %2
  %2 = address_to_pointer %1 : $*Element to $Builtin.RawPointer // user: %12
  %3 = upcast %0 : $_ContiguousArrayStorage<Element> to $_ContiguousArrayStorageBase // user: %4
  %4 = ref_element_addr %3 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %5
  %5 = struct_element_addr %4 : $*_ArrayBody, #_ArrayBody._storage // user: %6
  %6 = struct_element_addr %5 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count // user: %7
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load %7 : $*Builtin.Int64                  // user: %9
  %9 = builtin "assumeNonNegative_Int64"(%8 : $Builtin.Int64) : $Builtin.Int64 // user: %11
  %10 = metatype $@thick Element.Type             // user: %12
  %11 = builtin "truncOrBitCast_Int64_Word"(%9 : $Builtin.Int64) : $Builtin.Word // user: %12
  %12 = builtin "destroyArray"<Element>(%10 : $@thick Element.Type, %2 : $Builtin.RawPointer, %11 : $Builtin.Word) : $()
  fix_lifetime %0 : $_ContiguousArrayStorage<Element> // id: %13
  dealloc_ref %0 : $_ContiguousArrayStorage<Element> // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$Ss23_ContiguousArrayStorageCfD'

// specialized UnsafeBufferPointer.init(start:count:)
sil shared_external [serializable] @$SSR5start5countSRyxGSPyxGSg_SitcfCs5UInt8V_Tgq5 : $@convention(method) (Optional<UnsafePointer<UInt8>>, Int, @thin UnsafeBufferPointer<UInt8>.Type) -> UnsafeBufferPointer<UInt8> {
// %0                                             // users: %57, %46, %44, %43, %33
// %1                                             // users: %48, %30, %17
bb0(%0 : $Optional<UnsafePointer<UInt8>>, %1 : $Int, %2 : $@thin UnsafeBufferPointer<UInt8>.Type):
  %3 = string_literal utf8 "UnsafeBufferPointer with negative count" // user: %5
  %4 = integer_literal $Builtin.Word, 39          // user: %7
  %5 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word // user: %7
  %6 = integer_literal $Builtin.Int8, 2           // users: %62, %37, %25, %11, %7
  %7 = struct $StaticString (%5 : $Builtin.Word, %4 : $Builtin.Word, %6 : $Builtin.Int8) // user: %65
  %8 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/UnsafeBufferPointer.swift" // user: %10
  %9 = integer_literal $Builtin.Word, 142         // user: %11
  %10 = builtin "ptrtoint_Word"(%8 : $Builtin.RawPointer) : $Builtin.Word // user: %11
  %11 = struct $StaticString (%10 : $Builtin.Word, %9 : $Builtin.Word, %6 : $Builtin.Int8) // users: %65, %40
  %12 = integer_literal $Builtin.Int64, 815       // user: %13
  %13 = struct $UInt (%12 : $Builtin.Int64)       // user: %65
  %14 = integer_literal $Builtin.Int32, 0         // users: %63, %38
  br bb1                                          // id: %15

bb1:                                              // Preds: bb0
  %16 = integer_literal $Builtin.Int64, 0         // user: %18
  %17 = struct_extract %1 : $Int, #Int._value     // user: %18
  %18 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int1 // user: %20
  %19 = integer_literal $Builtin.Int1, 0          // user: %20
  %20 = builtin "int_expect_Int1"(%18 : $Builtin.Int1, %19 : $Builtin.Int1) : $Builtin.Int1 // user: %21
  cond_br %20, bb12, bb2                          // id: %21

bb2:                                              // Preds: bb1
  %22 = string_literal utf8 "UnsafeBufferPointer has a nil start and nonzero count" // user: %24
  %23 = integer_literal $Builtin.Word, 53         // user: %25
  %24 = builtin "ptrtoint_Word"(%22 : $Builtin.RawPointer) : $Builtin.Word // user: %25
  %25 = struct $StaticString (%24 : $Builtin.Word, %23 : $Builtin.Word, %6 : $Builtin.Int8) // user: %40
  %26 = integer_literal $Builtin.Int64, 817       // user: %27
  %27 = struct $UInt (%26 : $Builtin.Int64)       // user: %40
  br bb3                                          // id: %28

bb3:                                              // Preds: bb2
  %29 = integer_literal $Builtin.Int64, 0         // user: %31
  %30 = struct_extract %1 : $Int, #Int._value     // user: %31
  %31 = builtin "cmp_eq_Int64"(%30 : $Builtin.Int64, %29 : $Builtin.Int64) : $Builtin.Int1 // user: %32
  cond_br %31, bb7, bb4                           // id: %32

bb4:                                              // Preds: bb3
  switch_enum %0 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb6, case #Optional.none!enumelt: bb5 // id: %33

bb5:                                              // Preds: bb4
  %34 = string_literal utf8 "Fatal error"         // user: %36
  %35 = integer_literal $Builtin.Word, 11         // user: %37
  %36 = builtin "ptrtoint_Word"(%34 : $Builtin.RawPointer) : $Builtin.Word // user: %37
  %37 = struct $StaticString (%36 : $Builtin.Word, %35 : $Builtin.Word, %6 : $Builtin.Int8) // user: %40
  %38 = struct $UInt32 (%14 : $Builtin.Int32)     // user: %40
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %39 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %40
  %40 = apply %39(%37, %25, %11, %27, %38) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %41

bb6:                                              // Preds: bb4
  br bb10                                         // id: %42

bb7:                                              // Preds: bb3
  switch_enum %0 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb9, case #Optional.none!enumelt: bb8 // id: %43

bb8:                                              // Preds: bb7
  br bb11(%0 : $Optional<UnsafePointer<UInt8>>)   // id: %44

bb9:                                              // Preds: bb7
  br bb10                                         // id: %45

bb10:                                             // Preds: bb9 bb6
  %46 = unchecked_enum_data %0 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1 // user: %47
  %47 = struct_extract %46 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue // user: %50
  %48 = struct_extract %1 : $Int, #Int._value     // user: %49
  %49 = builtin "truncOrBitCast_Int64_Word"(%48 : $Builtin.Int64) : $Builtin.Word // user: %51
  %50 = pointer_to_address %47 : $Builtin.RawPointer to [strict] $*UInt8 // user: %51
  %51 = index_addr %50 : $*UInt8, %49 : $Builtin.Word // user: %52
  %52 = address_to_pointer %51 : $*UInt8 to $Builtin.RawPointer // user: %53
  %53 = struct $UnsafePointer<UInt8> (%52 : $Builtin.RawPointer) // user: %54
  %54 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %53 : $UnsafePointer<UInt8> // user: %55
  br bb11(%54 : $Optional<UnsafePointer<UInt8>>)  // id: %55

// %56                                            // user: %57
bb11(%56 : $Optional<UnsafePointer<UInt8>>):      // Preds: bb10 bb8
  %57 = struct $UnsafeBufferPointer<UInt8> (%0 : $Optional<UnsafePointer<UInt8>>, %56 : $Optional<UnsafePointer<UInt8>>) // user: %58
  return %57 : $UnsafeBufferPointer<UInt8>        // id: %58

bb12:                                             // Preds: bb1
  %59 = string_literal utf8 "Fatal error"         // user: %61
  %60 = integer_literal $Builtin.Word, 11         // user: %62
  %61 = builtin "ptrtoint_Word"(%59 : $Builtin.RawPointer) : $Builtin.Word // user: %62
  %62 = struct $StaticString (%61 : $Builtin.Word, %60 : $Builtin.Word, %6 : $Builtin.Int8) // user: %65
  %63 = struct $UInt32 (%14 : $Builtin.Int32)     // user: %65
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %64 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %65
  %65 = apply %64(%62, %7, %11, %13, %63) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %66
} // end sil function '$SSR5start5countSRyxGSPyxGSg_SitcfCs5UInt8V_Tgq5'

// closure #1 in closure #2 in _unimplementedInitializer(className:initName:file:line:column:)
sil shared_external [serialized] @$Ss25_unimplementedInitializer9className04initD04file4line6columns5NeverOs12StaticStringV_A2JS2utFySRys5UInt8VGXEfU0_yAMXEfU_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>) -> () {
// %0                                             // users: %97, %75
// %1                                             // users: %27, %2
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $UnsafeBufferPointer<UInt8>):
  %2 = struct_extract %1 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position // user: %3
  switch_enum %2 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb3, case #Optional.none!enumelt: bb1 // id: %3

bb1:                                              // Preds: bb0
  %4 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/AssertCommon.swift" // user: %11
  %5 = integer_literal $Builtin.Word, 100         // user: %12
  %6 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %8
  %7 = integer_literal $Builtin.Word, 57          // user: %10
  %8 = builtin "ptrtoint_Word"(%6 : $Builtin.RawPointer) : $Builtin.Word // user: %10
  %9 = integer_literal $Builtin.Int8, 2           // users: %20, %12, %10
  %10 = struct $StaticString (%8 : $Builtin.Word, %7 : $Builtin.Word, %9 : $Builtin.Int8) // user: %23
  %11 = builtin "ptrtoint_Word"(%4 : $Builtin.RawPointer) : $Builtin.Word // user: %12
  %12 = struct $StaticString (%11 : $Builtin.Word, %5 : $Builtin.Word, %9 : $Builtin.Int8) // user: %23
  %13 = integer_literal $Builtin.Int64, 222       // user: %14
  %14 = struct $UInt (%13 : $Builtin.Int64)       // user: %23
  %15 = integer_literal $Builtin.Int32, 0         // user: %21
  br bb2                                          // id: %16

bb2:                                              // Preds: bb1
  %17 = string_literal utf8 "Fatal error"         // user: %19
  %18 = integer_literal $Builtin.Word, 11         // user: %20
  %19 = builtin "ptrtoint_Word"(%17 : $Builtin.RawPointer) : $Builtin.Word // user: %20
  %20 = struct $StaticString (%19 : $Builtin.Word, %18 : $Builtin.Word, %9 : $Builtin.Int8) // user: %23
  %21 = struct $UInt32 (%15 : $Builtin.Int32)     // user: %23
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %22 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %23
  %23 = apply %22(%20, %10, %12, %14, %21) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %24

// %25                                            // user: %135
bb3(%25 : $UnsafePointer<UInt8>):                 // Preds: bb0
  // function_ref specialized UnsafeBufferPointer.count.getter
  %26 = function_ref @$SSR5countSivgs5UInt8V_Tgq5 : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %97, %27
  %27 = apply %26(%1) : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %72, %41
  %28 = string_literal utf8 "Not enough bits to represent a signed value" // user: %30
  %29 = integer_literal $Builtin.Word, 43         // user: %32
  %30 = builtin "ptrtoint_Word"(%28 : $Builtin.RawPointer) : $Builtin.Word // user: %32
  %31 = integer_literal $Builtin.Int8, 2          // users: %149, %141, %125, %91, %84, %82, %67, %36, %32
  %32 = struct $StaticString (%30 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8) // users: %152, %144, %128, %70
  %33 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %35
  %34 = integer_literal $Builtin.Word, 131        // user: %36
  %35 = builtin "ptrtoint_Word"(%33 : $Builtin.RawPointer) : $Builtin.Word // user: %36
  %36 = struct $StaticString (%35 : $Builtin.Word, %34 : $Builtin.Word, %31 : $Builtin.Int8) // users: %152, %144, %128, %70
  %37 = integer_literal $Builtin.Int64, 3549      // user: %38
  %38 = struct $UInt (%37 : $Builtin.Int64)       // users: %152, %144
  %39 = integer_literal $Builtin.Int32, 0         // users: %150, %142, %133, %126, %112, %92, %68, %54
  br bb4                                          // id: %40

bb4:                                              // Preds: bb3
  %41 = struct_extract %27 : $Int, #Int._value    // users: %60, %56, %53, %46, %43
  %42 = integer_literal $Builtin.Int64, 0         // user: %43
  %43 = builtin "cmp_slt_Int64"(%41 : $Builtin.Int64, %42 : $Builtin.Int64) : $Builtin.Int1 // users: %52, %44
  cond_br %43, bb5, bb6                           // id: %44

bb5:                                              // Preds: bb4
  %45 = integer_literal $Builtin.Int64, -2147483648 // user: %46
  %46 = builtin "cmp_slt_Int64"(%41 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1 // user: %48
  %47 = integer_literal $Builtin.Int1, 0          // user: %48
  %48 = builtin "int_expect_Int1"(%46 : $Builtin.Int1, %47 : $Builtin.Int1) : $Builtin.Int1 // user: %49
  cond_br %48, bb24, bb6                          // id: %49

bb6:                                              // Preds: bb5 bb4
  %50 = integer_literal $Builtin.Int64, 3555      // user: %51
  %51 = struct $UInt (%50 : $Builtin.Int64)       // user: %70
  cond_br %43, bb11, bb7                          // id: %52

bb7:                                              // Preds: bb6
  %53 = builtin "truncOrBitCast_Int64_Int32"(%41 : $Builtin.Int64) : $Builtin.Int32 // users: %55, %54
  %54 = builtin "cmp_slt_Int32"(%53 : $Builtin.Int32, %39 : $Builtin.Int32) : $Builtin.Int1 // user: %58
  %55 = builtin "sextOrBitCast_Int32_Int64"(%53 : $Builtin.Int32) : $Builtin.Int64 // user: %56
  %56 = builtin "cmp_eq_Int64"(%55 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int1 // user: %57
  cond_br %56, bb8, bb9                           // id: %57

bb8:                                              // Preds: bb7
  cond_br %54, bb9, bb11                          // id: %58

bb9:                                              // Preds: bb8 bb7
  %59 = integer_literal $Builtin.Int64, 2147483647 // user: %60
  %60 = builtin "cmp_slt_Int64"(%59 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int1 // user: %62
  %61 = integer_literal $Builtin.Int1, 0          // user: %62
  %62 = builtin "int_expect_Int1"(%60 : $Builtin.Int1, %61 : $Builtin.Int1) : $Builtin.Int1 // user: %63
  cond_br %62, bb10, bb11                         // id: %63

bb10:                                             // Preds: bb9
  %64 = string_literal utf8 "Fatal error"         // user: %66
  %65 = integer_literal $Builtin.Word, 11         // user: %67
  %66 = builtin "ptrtoint_Word"(%64 : $Builtin.RawPointer) : $Builtin.Word // user: %67
  %67 = struct $StaticString (%66 : $Builtin.Word, %65 : $Builtin.Word, %31 : $Builtin.Int8) // user: %70
  %68 = struct $UInt32 (%39 : $Builtin.Int32)     // user: %70
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %69 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %70
  %70 = apply %69(%67, %32, %36, %51, %68) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %71

bb11:                                             // Preds: bb9 bb8 bb6
  %72 = struct_extract %27 : $Int, #Int._value    // user: %73
  %73 = builtin "truncOrBitCast_Int64_Int32"(%72 : $Builtin.Int64) : $Builtin.Int32 // user: %74
  %74 = struct $Int32 (%73 : $Builtin.Int32)      // user: %135
  %75 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position // user: %76
  switch_enum %75 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb14, case #Optional.none!enumelt: bb12 // id: %76

bb12:                                             // Preds: bb11
  %77 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/AssertCommon.swift" // user: %83
  %78 = integer_literal $Builtin.Word, 100        // user: %84
  %79 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %81
  %80 = integer_literal $Builtin.Word, 57         // user: %82
  %81 = builtin "ptrtoint_Word"(%79 : $Builtin.RawPointer) : $Builtin.Word // user: %82
  %82 = struct $StaticString (%81 : $Builtin.Word, %80 : $Builtin.Word, %31 : $Builtin.Int8) // user: %94
  %83 = builtin "ptrtoint_Word"(%77 : $Builtin.RawPointer) : $Builtin.Word // user: %84
  %84 = struct $StaticString (%83 : $Builtin.Word, %78 : $Builtin.Word, %31 : $Builtin.Int8) // user: %94
  %85 = integer_literal $Builtin.Int64, 223       // user: %86
  %86 = struct $UInt (%85 : $Builtin.Int64)       // user: %94
  br bb13                                         // id: %87

bb13:                                             // Preds: bb12
  %88 = string_literal utf8 "Fatal error"         // user: %90
  %89 = integer_literal $Builtin.Word, 11         // user: %91
  %90 = builtin "ptrtoint_Word"(%88 : $Builtin.RawPointer) : $Builtin.Word // user: %91
  %91 = struct $StaticString (%90 : $Builtin.Word, %89 : $Builtin.Word, %31 : $Builtin.Int8) // user: %94
  %92 = struct $UInt32 (%39 : $Builtin.Int32)     // user: %94
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %93 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %94
  %94 = apply %93(%91, %82, %84, %86, %92) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %95

// %96                                            // user: %135
bb14(%96 : $UnsafePointer<UInt8>):                // Preds: bb11
  %97 = apply %26(%0) : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %130, %99
  br bb15                                         // id: %98

bb15:                                             // Preds: bb14
  %99 = struct_extract %97 : $Int, #Int._value    // users: %118, %114, %111, %104, %101
  %100 = integer_literal $Builtin.Int64, 0        // user: %101
  %101 = builtin "cmp_slt_Int64"(%99 : $Builtin.Int64, %100 : $Builtin.Int64) : $Builtin.Int1 // users: %110, %102
  cond_br %101, bb16, bb17                        // id: %102

bb16:                                             // Preds: bb15
  %103 = integer_literal $Builtin.Int64, -2147483648 // user: %104
  %104 = builtin "cmp_slt_Int64"(%99 : $Builtin.Int64, %103 : $Builtin.Int64) : $Builtin.Int1 // user: %106
  %105 = integer_literal $Builtin.Int1, 0         // user: %106
  %106 = builtin "int_expect_Int1"(%104 : $Builtin.Int1, %105 : $Builtin.Int1) : $Builtin.Int1 // user: %107
  cond_br %106, bb23, bb17                        // id: %107

bb17:                                             // Preds: bb16 bb15
  %108 = integer_literal $Builtin.Int64, 3555     // user: %109
  %109 = struct $UInt (%108 : $Builtin.Int64)     // user: %128
  cond_br %101, bb22, bb18                        // id: %110

bb18:                                             // Preds: bb17
  %111 = builtin "truncOrBitCast_Int64_Int32"(%99 : $Builtin.Int64) : $Builtin.Int32 // users: %113, %112
  %112 = builtin "cmp_slt_Int32"(%111 : $Builtin.Int32, %39 : $Builtin.Int32) : $Builtin.Int1 // user: %116
  %113 = builtin "sextOrBitCast_Int32_Int64"(%111 : $Builtin.Int32) : $Builtin.Int64 // user: %114
  %114 = builtin "cmp_eq_Int64"(%113 : $Builtin.Int64, %99 : $Builtin.Int64) : $Builtin.Int1 // user: %115
  cond_br %114, bb19, bb20                        // id: %115

bb19:                                             // Preds: bb18
  cond_br %112, bb20, bb22                        // id: %116

bb20:                                             // Preds: bb19 bb18
  %117 = integer_literal $Builtin.Int64, 2147483647 // user: %118
  %118 = builtin "cmp_slt_Int64"(%117 : $Builtin.Int64, %99 : $Builtin.Int64) : $Builtin.Int1 // user: %120
  %119 = integer_literal $Builtin.Int1, 0         // user: %120
  %120 = builtin "int_expect_Int1"(%118 : $Builtin.Int1, %119 : $Builtin.Int1) : $Builtin.Int1 // user: %121
  cond_br %120, bb21, bb22                        // id: %121

bb21:                                             // Preds: bb20
  %122 = string_literal utf8 "Fatal error"        // user: %124
  %123 = integer_literal $Builtin.Word, 11        // user: %125
  %124 = builtin "ptrtoint_Word"(%122 : $Builtin.RawPointer) : $Builtin.Word // user: %125
  %125 = struct $StaticString (%124 : $Builtin.Word, %123 : $Builtin.Word, %31 : $Builtin.Int8) // user: %128
  %126 = struct $UInt32 (%39 : $Builtin.Int32)    // user: %128
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %127 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %128
  %128 = apply %127(%125, %32, %36, %109, %126) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %129

bb22:                                             // Preds: bb20 bb19 bb17
  %130 = struct_extract %97 : $Int, #Int._value   // user: %131
  %131 = builtin "truncOrBitCast_Int64_Int32"(%130 : $Builtin.Int64) : $Builtin.Int32 // user: %132
  %132 = struct $Int32 (%131 : $Builtin.Int32)    // user: %135
  %133 = struct $UInt32 (%39 : $Builtin.Int32)    // user: %135
  // function_ref _swift_stdlib_reportUnimplementedInitializer
  %134 = function_ref @_swift_stdlib_reportUnimplementedInitializer : $@convention(c) (UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UInt32) -> () // user: %135
  %135 = apply %134(%25, %74, %96, %132, %133) : $@convention(c) (UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UInt32) -> ()
  %136 = tuple ()                                 // user: %137
  return %136 : $()                               // id: %137

bb23:                                             // Preds: bb16
  %138 = string_literal utf8 "Fatal error"        // user: %140
  %139 = integer_literal $Builtin.Word, 11        // user: %141
  %140 = builtin "ptrtoint_Word"(%138 : $Builtin.RawPointer) : $Builtin.Word // user: %141
  %141 = struct $StaticString (%140 : $Builtin.Word, %139 : $Builtin.Word, %31 : $Builtin.Int8) // user: %144
  %142 = struct $UInt32 (%39 : $Builtin.Int32)    // user: %144
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %143 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %144
  %144 = apply %143(%141, %32, %36, %38, %142) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %145

bb24:                                             // Preds: bb5
  %146 = string_literal utf8 "Fatal error"        // user: %148
  %147 = integer_literal $Builtin.Word, 11        // user: %149
  %148 = builtin "ptrtoint_Word"(%146 : $Builtin.RawPointer) : $Builtin.Word // user: %149
  %149 = struct $StaticString (%148 : $Builtin.Word, %147 : $Builtin.Word, %31 : $Builtin.Int8) // user: %152
  %150 = struct $UInt32 (%39 : $Builtin.Int32)    // user: %152
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %151 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %152
  %152 = apply %151(%149, %32, %36, %38, %150) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %153
} // end sil function '$Ss25_unimplementedInitializer9className04initD04file4line6columns5NeverOs12StaticStringV_A2JS2utFySRys5UInt8VGXEfU0_yAMXEfU_'

// closure #1 in closure #1 in closure #1 in _unimplementedInitializer(className:initName:file:line:column:)
sil shared_external [serialized] @$Ss25_unimplementedInitializer9className04initD04file4line6columns5NeverOs12StaticStringV_A2JS2utFySRys5UInt8VGXEfU_yAMXEfU_yAMXEfU_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> () {
// %0                                             // users: %158, %136
// %1                                             // users: %30, %5
// %2                                             // users: %100, %78
// %3                                             // users: %215, %197
// %4                                             // users: %237, %219
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $UnsafeBufferPointer<UInt8>, %2 : $UnsafeBufferPointer<UInt8>, %3 : $UInt, %4 : $UInt):
  %5 = struct_extract %1 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position // user: %6
  switch_enum %5 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb3, case #Optional.none!enumelt: bb1 // id: %6

bb1:                                              // Preds: bb0
  %7 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/AssertCommon.swift" // user: %14
  %8 = integer_literal $Builtin.Word, 100         // user: %15
  %9 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %11
  %10 = integer_literal $Builtin.Word, 57         // user: %13
  %11 = builtin "ptrtoint_Word"(%9 : $Builtin.RawPointer) : $Builtin.Word // user: %13
  %12 = integer_literal $Builtin.Int8, 2          // users: %23, %15, %13
  %13 = struct $StaticString (%11 : $Builtin.Word, %10 : $Builtin.Word, %12 : $Builtin.Int8) // user: %26
  %14 = builtin "ptrtoint_Word"(%7 : $Builtin.RawPointer) : $Builtin.Word // user: %15
  %15 = struct $StaticString (%14 : $Builtin.Word, %8 : $Builtin.Word, %12 : $Builtin.Int8) // user: %26
  %16 = integer_literal $Builtin.Int64, 208       // user: %17
  %17 = struct $UInt (%16 : $Builtin.Int64)       // user: %26
  %18 = integer_literal $Builtin.Int32, 0         // user: %24
  br bb2                                          // id: %19

bb2:                                              // Preds: bb1
  %20 = string_literal utf8 "Fatal error"         // user: %22
  %21 = integer_literal $Builtin.Word, 11         // user: %23
  %22 = builtin "ptrtoint_Word"(%20 : $Builtin.RawPointer) : $Builtin.Word // user: %23
  %23 = struct $StaticString (%22 : $Builtin.Word, %21 : $Builtin.Word, %12 : $Builtin.Int8) // user: %26
  %24 = struct $UInt32 (%18 : $Builtin.Int32)     // user: %26
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %25 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %26
  %26 = apply %25(%23, %13, %15, %17, %24) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %27

// %28                                            // user: %242
bb3(%28 : $UnsafePointer<UInt8>):                 // Preds: bb0
  // function_ref specialized UnsafeBufferPointer.count.getter
  %29 = function_ref @$SSR5countSivgs5UInt8V_Tgq5 : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %158, %100, %30
  %30 = apply %29(%1) : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %75, %44
  %31 = string_literal utf8 "Not enough bits to represent a signed value" // user: %33
  %32 = integer_literal $Builtin.Word, 43         // user: %35
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word // user: %35
  %34 = integer_literal $Builtin.Int8, 2          // users: %264, %256, %248, %232, %210, %186, %152, %145, %143, %128, %94, %87, %85, %70, %39, %35
  %35 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %34 : $Builtin.Int8) // users: %267, %259, %251, %235, %213, %189, %131, %73
  %36 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %38
  %37 = integer_literal $Builtin.Word, 131        // user: %39
  %38 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word // user: %39
  %39 = struct $StaticString (%38 : $Builtin.Word, %37 : $Builtin.Word, %34 : $Builtin.Int8) // users: %267, %259, %251, %235, %213, %189, %131, %73
  %40 = integer_literal $Builtin.Int64, 3549      // user: %41
  %41 = struct $UInt (%40 : $Builtin.Int64)       // users: %267, %259, %251
  %42 = integer_literal $Builtin.Int32, 0         // users: %265, %257, %249, %240, %233, %211, %187, %173, %153, %129, %115, %95, %71, %57
  br bb4                                          // id: %43

bb4:                                              // Preds: bb3
  %44 = struct_extract %30 : $Int, #Int._value    // users: %63, %59, %56, %49, %46
  %45 = integer_literal $Builtin.Int64, 0         // user: %46
  %46 = builtin "cmp_slt_Int64"(%44 : $Builtin.Int64, %45 : $Builtin.Int64) : $Builtin.Int1 // users: %55, %47
  cond_br %46, bb5, bb6                           // id: %47

bb5:                                              // Preds: bb4
  %48 = integer_literal $Builtin.Int64, -2147483648 // user: %49
  %49 = builtin "cmp_slt_Int64"(%44 : $Builtin.Int64, %48 : $Builtin.Int64) : $Builtin.Int1 // user: %51
  %50 = integer_literal $Builtin.Int1, 0          // user: %51
  %51 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %50 : $Builtin.Int1) : $Builtin.Int1 // user: %52
  cond_br %51, bb44, bb6                          // id: %52

bb6:                                              // Preds: bb5 bb4
  %53 = integer_literal $Builtin.Int64, 3555      // user: %54
  %54 = struct $UInt (%53 : $Builtin.Int64)       // user: %73
  cond_br %46, bb11, bb7                          // id: %55

bb7:                                              // Preds: bb6
  %56 = builtin "truncOrBitCast_Int64_Int32"(%44 : $Builtin.Int64) : $Builtin.Int32 // users: %58, %57
  %57 = builtin "cmp_slt_Int32"(%56 : $Builtin.Int32, %42 : $Builtin.Int32) : $Builtin.Int1 // user: %61
  %58 = builtin "sextOrBitCast_Int32_Int64"(%56 : $Builtin.Int32) : $Builtin.Int64 // user: %59
  %59 = builtin "cmp_eq_Int64"(%58 : $Builtin.Int64, %44 : $Builtin.Int64) : $Builtin.Int1 // user: %60
  cond_br %59, bb8, bb9                           // id: %60

bb8:                                              // Preds: bb7
  cond_br %57, bb9, bb11                          // id: %61

bb9:                                              // Preds: bb8 bb7
  %62 = integer_literal $Builtin.Int64, 2147483647 // user: %63
  %63 = builtin "cmp_slt_Int64"(%62 : $Builtin.Int64, %44 : $Builtin.Int64) : $Builtin.Int1 // user: %65
  %64 = integer_literal $Builtin.Int1, 0          // user: %65
  %65 = builtin "int_expect_Int1"(%63 : $Builtin.Int1, %64 : $Builtin.Int1) : $Builtin.Int1 // user: %66
  cond_br %65, bb10, bb11                         // id: %66

bb10:                                             // Preds: bb9
  %67 = string_literal utf8 "Fatal error"         // user: %69
  %68 = integer_literal $Builtin.Word, 11         // user: %70
  %69 = builtin "ptrtoint_Word"(%67 : $Builtin.RawPointer) : $Builtin.Word // user: %70
  %70 = struct $StaticString (%69 : $Builtin.Word, %68 : $Builtin.Word, %34 : $Builtin.Int8) // user: %73
  %71 = struct $UInt32 (%42 : $Builtin.Int32)     // user: %73
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %72 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %73
  %73 = apply %72(%70, %35, %39, %54, %71) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %74

bb11:                                             // Preds: bb9 bb8 bb6
  %75 = struct_extract %30 : $Int, #Int._value    // user: %76
  %76 = builtin "truncOrBitCast_Int64_Int32"(%75 : $Builtin.Int64) : $Builtin.Int32 // user: %77
  %77 = struct $Int32 (%76 : $Builtin.Int32)      // user: %242
  %78 = struct_extract %2 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position // user: %79
  switch_enum %78 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb14, case #Optional.none!enumelt: bb12 // id: %79

bb12:                                             // Preds: bb11
  %80 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/AssertCommon.swift" // user: %86
  %81 = integer_literal $Builtin.Word, 100        // user: %87
  %82 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %84
  %83 = integer_literal $Builtin.Word, 57         // user: %85
  %84 = builtin "ptrtoint_Word"(%82 : $Builtin.RawPointer) : $Builtin.Word // user: %85
  %85 = struct $StaticString (%84 : $Builtin.Word, %83 : $Builtin.Word, %34 : $Builtin.Int8) // user: %97
  %86 = builtin "ptrtoint_Word"(%80 : $Builtin.RawPointer) : $Builtin.Word // user: %87
  %87 = struct $StaticString (%86 : $Builtin.Word, %81 : $Builtin.Word, %34 : $Builtin.Int8) // user: %97
  %88 = integer_literal $Builtin.Int64, 209       // user: %89
  %89 = struct $UInt (%88 : $Builtin.Int64)       // user: %97
  br bb13                                         // id: %90

bb13:                                             // Preds: bb12
  %91 = string_literal utf8 "Fatal error"         // user: %93
  %92 = integer_literal $Builtin.Word, 11         // user: %94
  %93 = builtin "ptrtoint_Word"(%91 : $Builtin.RawPointer) : $Builtin.Word // user: %94
  %94 = struct $StaticString (%93 : $Builtin.Word, %92 : $Builtin.Word, %34 : $Builtin.Int8) // user: %97
  %95 = struct $UInt32 (%42 : $Builtin.Int32)     // user: %97
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %96 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %97
  %97 = apply %96(%94, %85, %87, %89, %95) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %98

// %99                                            // user: %242
bb14(%99 : $UnsafePointer<UInt8>):                // Preds: bb11
  %100 = apply %29(%2) : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %133, %102
  br bb15                                         // id: %101

bb15:                                             // Preds: bb14
  %102 = struct_extract %100 : $Int, #Int._value  // users: %121, %117, %114, %107, %104
  %103 = integer_literal $Builtin.Int64, 0        // user: %104
  %104 = builtin "cmp_slt_Int64"(%102 : $Builtin.Int64, %103 : $Builtin.Int64) : $Builtin.Int1 // users: %113, %105
  cond_br %104, bb16, bb17                        // id: %105

bb16:                                             // Preds: bb15
  %106 = integer_literal $Builtin.Int64, -2147483648 // user: %107
  %107 = builtin "cmp_slt_Int64"(%102 : $Builtin.Int64, %106 : $Builtin.Int64) : $Builtin.Int1 // user: %109
  %108 = integer_literal $Builtin.Int1, 0         // user: %109
  %109 = builtin "int_expect_Int1"(%107 : $Builtin.Int1, %108 : $Builtin.Int1) : $Builtin.Int1 // user: %110
  cond_br %109, bb43, bb17                        // id: %110

bb17:                                             // Preds: bb16 bb15
  %111 = integer_literal $Builtin.Int64, 3555     // user: %112
  %112 = struct $UInt (%111 : $Builtin.Int64)     // user: %131
  cond_br %104, bb22, bb18                        // id: %113

bb18:                                             // Preds: bb17
  %114 = builtin "truncOrBitCast_Int64_Int32"(%102 : $Builtin.Int64) : $Builtin.Int32 // users: %116, %115
  %115 = builtin "cmp_slt_Int32"(%114 : $Builtin.Int32, %42 : $Builtin.Int32) : $Builtin.Int1 // user: %119
  %116 = builtin "sextOrBitCast_Int32_Int64"(%114 : $Builtin.Int32) : $Builtin.Int64 // user: %117
  %117 = builtin "cmp_eq_Int64"(%116 : $Builtin.Int64, %102 : $Builtin.Int64) : $Builtin.Int1 // user: %118
  cond_br %117, bb19, bb20                        // id: %118

bb19:                                             // Preds: bb18
  cond_br %115, bb20, bb22                        // id: %119

bb20:                                             // Preds: bb19 bb18
  %120 = integer_literal $Builtin.Int64, 2147483647 // user: %121
  %121 = builtin "cmp_slt_Int64"(%120 : $Builtin.Int64, %102 : $Builtin.Int64) : $Builtin.Int1 // user: %123
  %122 = integer_literal $Builtin.Int1, 0         // user: %123
  %123 = builtin "int_expect_Int1"(%121 : $Builtin.Int1, %122 : $Builtin.Int1) : $Builtin.Int1 // user: %124
  cond_br %123, bb21, bb22                        // id: %124

bb21:                                             // Preds: bb20
  %125 = string_literal utf8 "Fatal error"        // user: %127
  %126 = integer_literal $Builtin.Word, 11        // user: %128
  %127 = builtin "ptrtoint_Word"(%125 : $Builtin.RawPointer) : $Builtin.Word // user: %128
  %128 = struct $StaticString (%127 : $Builtin.Word, %126 : $Builtin.Word, %34 : $Builtin.Int8) // user: %131
  %129 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %131
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %130 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %131
  %131 = apply %130(%128, %35, %39, %112, %129) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %132

bb22:                                             // Preds: bb20 bb19 bb17
  %133 = struct_extract %100 : $Int, #Int._value  // user: %134
  %134 = builtin "truncOrBitCast_Int64_Int32"(%133 : $Builtin.Int64) : $Builtin.Int32 // user: %135
  %135 = struct $Int32 (%134 : $Builtin.Int32)    // user: %242
  %136 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position // user: %137
  switch_enum %136 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb25, case #Optional.none!enumelt: bb23 // id: %137

bb23:                                             // Preds: bb22
  %138 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/AssertCommon.swift" // user: %144
  %139 = integer_literal $Builtin.Word, 100       // user: %145
  %140 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %142
  %141 = integer_literal $Builtin.Word, 57        // user: %143
  %142 = builtin "ptrtoint_Word"(%140 : $Builtin.RawPointer) : $Builtin.Word // user: %143
  %143 = struct $StaticString (%142 : $Builtin.Word, %141 : $Builtin.Word, %34 : $Builtin.Int8) // user: %155
  %144 = builtin "ptrtoint_Word"(%138 : $Builtin.RawPointer) : $Builtin.Word // user: %145
  %145 = struct $StaticString (%144 : $Builtin.Word, %139 : $Builtin.Word, %34 : $Builtin.Int8) // user: %155
  %146 = integer_literal $Builtin.Int64, 210      // user: %147
  %147 = struct $UInt (%146 : $Builtin.Int64)     // user: %155
  br bb24                                         // id: %148

bb24:                                             // Preds: bb23
  %149 = string_literal utf8 "Fatal error"        // user: %151
  %150 = integer_literal $Builtin.Word, 11        // user: %152
  %151 = builtin "ptrtoint_Word"(%149 : $Builtin.RawPointer) : $Builtin.Word // user: %152
  %152 = struct $StaticString (%151 : $Builtin.Word, %150 : $Builtin.Word, %34 : $Builtin.Int8) // user: %155
  %153 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %155
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %154 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %155
  %155 = apply %154(%152, %143, %145, %147, %153) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %156

// %157                                           // user: %242
bb25(%157 : $UnsafePointer<UInt8>):               // Preds: bb22
  %158 = apply %29(%0) : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int // users: %191, %160
  br bb26                                         // id: %159

bb26:                                             // Preds: bb25
  %160 = struct_extract %158 : $Int, #Int._value  // users: %179, %175, %172, %165, %162
  %161 = integer_literal $Builtin.Int64, 0        // user: %162
  %162 = builtin "cmp_slt_Int64"(%160 : $Builtin.Int64, %161 : $Builtin.Int64) : $Builtin.Int1 // users: %171, %163
  cond_br %162, bb27, bb28                        // id: %163

bb27:                                             // Preds: bb26
  %164 = integer_literal $Builtin.Int64, -2147483648 // user: %165
  %165 = builtin "cmp_slt_Int64"(%160 : $Builtin.Int64, %164 : $Builtin.Int64) : $Builtin.Int1 // user: %167
  %166 = integer_literal $Builtin.Int1, 0         // user: %167
  %167 = builtin "int_expect_Int1"(%165 : $Builtin.Int1, %166 : $Builtin.Int1) : $Builtin.Int1 // user: %168
  cond_br %167, bb42, bb28                        // id: %168

bb28:                                             // Preds: bb27 bb26
  %169 = integer_literal $Builtin.Int64, 3555     // user: %170
  %170 = struct $UInt (%169 : $Builtin.Int64)     // user: %189
  cond_br %162, bb33, bb29                        // id: %171

bb29:                                             // Preds: bb28
  %172 = builtin "truncOrBitCast_Int64_Int32"(%160 : $Builtin.Int64) : $Builtin.Int32 // users: %174, %173
  %173 = builtin "cmp_slt_Int32"(%172 : $Builtin.Int32, %42 : $Builtin.Int32) : $Builtin.Int1 // user: %177
  %174 = builtin "sextOrBitCast_Int32_Int64"(%172 : $Builtin.Int32) : $Builtin.Int64 // user: %175
  %175 = builtin "cmp_eq_Int64"(%174 : $Builtin.Int64, %160 : $Builtin.Int64) : $Builtin.Int1 // user: %176
  cond_br %175, bb30, bb31                        // id: %176

bb30:                                             // Preds: bb29
  cond_br %173, bb31, bb33                        // id: %177

bb31:                                             // Preds: bb30 bb29
  %178 = integer_literal $Builtin.Int64, 2147483647 // user: %179
  %179 = builtin "cmp_slt_Int64"(%178 : $Builtin.Int64, %160 : $Builtin.Int64) : $Builtin.Int1 // user: %181
  %180 = integer_literal $Builtin.Int1, 0         // user: %181
  %181 = builtin "int_expect_Int1"(%179 : $Builtin.Int1, %180 : $Builtin.Int1) : $Builtin.Int1 // user: %182
  cond_br %181, bb32, bb33                        // id: %182

bb32:                                             // Preds: bb31
  %183 = string_literal utf8 "Fatal error"        // user: %185
  %184 = integer_literal $Builtin.Word, 11        // user: %186
  %185 = builtin "ptrtoint_Word"(%183 : $Builtin.RawPointer) : $Builtin.Word // user: %186
  %186 = struct $StaticString (%185 : $Builtin.Word, %184 : $Builtin.Word, %34 : $Builtin.Int8) // user: %189
  %187 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %189
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %188 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %189
  %189 = apply %188(%186, %35, %39, %170, %187) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %190

bb33:                                             // Preds: bb31 bb30 bb28
  %191 = struct_extract %158 : $Int, #Int._value  // user: %192
  %192 = builtin "truncOrBitCast_Int64_Int32"(%191 : $Builtin.Int64) : $Builtin.Int32 // user: %193
  %193 = struct $Int32 (%192 : $Builtin.Int32)    // user: %242
  %194 = integer_literal $Builtin.Int64, 3445     // user: %195
  %195 = struct $UInt (%194 : $Builtin.Int64)     // users: %235, %213
  br bb34                                         // id: %196

bb34:                                             // Preds: bb33
  %197 = struct_extract %3 : $UInt, #UInt._value  // users: %203, %200, %198
  %198 = builtin "truncOrBitCast_Int64_Int32"(%197 : $Builtin.Int64) : $Builtin.Int32 // user: %199
  %199 = builtin "zextOrBitCast_Int32_Int64"(%198 : $Builtin.Int32) : $Builtin.Int64 // user: %200
  %200 = builtin "cmp_eq_Int64"(%199 : $Builtin.Int64, %197 : $Builtin.Int64) : $Builtin.Int1 // user: %201
  cond_br %200, bb37, bb35                        // id: %201

bb35:                                             // Preds: bb34
  %202 = integer_literal $Builtin.Int64, 4294967295 // user: %203
  %203 = builtin "cmp_ult_Int64"(%202 : $Builtin.Int64, %197 : $Builtin.Int64) : $Builtin.Int1 // user: %205
  %204 = integer_literal $Builtin.Int1, 0         // user: %205
  %205 = builtin "int_expect_Int1"(%203 : $Builtin.Int1, %204 : $Builtin.Int1) : $Builtin.Int1 // user: %206
  cond_br %205, bb36, bb37                        // id: %206

bb36:                                             // Preds: bb35
  %207 = string_literal utf8 "Fatal error"        // user: %209
  %208 = integer_literal $Builtin.Word, 11        // user: %210
  %209 = builtin "ptrtoint_Word"(%207 : $Builtin.RawPointer) : $Builtin.Word // user: %210
  %210 = struct $StaticString (%209 : $Builtin.Word, %208 : $Builtin.Word, %34 : $Builtin.Int8) // user: %213
  %211 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %213
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %212 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %213
  %213 = apply %212(%210, %35, %39, %195, %211) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %214

bb37:                                             // Preds: bb35 bb34
  %215 = struct_extract %3 : $UInt, #UInt._value  // user: %216
  %216 = builtin "truncOrBitCast_Int64_Int32"(%215 : $Builtin.Int64) : $Builtin.Int32 // user: %217
  %217 = struct $UInt32 (%216 : $Builtin.Int32)   // user: %242
  br bb38                                         // id: %218

bb38:                                             // Preds: bb37
  %219 = struct_extract %4 : $UInt, #UInt._value  // users: %225, %222, %220
  %220 = builtin "truncOrBitCast_Int64_Int32"(%219 : $Builtin.Int64) : $Builtin.Int32 // user: %221
  %221 = builtin "zextOrBitCast_Int32_Int64"(%220 : $Builtin.Int32) : $Builtin.Int64 // user: %222
  %222 = builtin "cmp_eq_Int64"(%221 : $Builtin.Int64, %219 : $Builtin.Int64) : $Builtin.Int1 // user: %223
  cond_br %222, bb41, bb39                        // id: %223

bb39:                                             // Preds: bb38
  %224 = integer_literal $Builtin.Int64, 4294967295 // user: %225
  %225 = builtin "cmp_ult_Int64"(%224 : $Builtin.Int64, %219 : $Builtin.Int64) : $Builtin.Int1 // user: %227
  %226 = integer_literal $Builtin.Int1, 0         // user: %227
  %227 = builtin "int_expect_Int1"(%225 : $Builtin.Int1, %226 : $Builtin.Int1) : $Builtin.Int1 // user: %228
  cond_br %227, bb40, bb41                        // id: %228

bb40:                                             // Preds: bb39
  %229 = string_literal utf8 "Fatal error"        // user: %231
  %230 = integer_literal $Builtin.Word, 11        // user: %232
  %231 = builtin "ptrtoint_Word"(%229 : $Builtin.RawPointer) : $Builtin.Word // user: %232
  %232 = struct $StaticString (%231 : $Builtin.Word, %230 : $Builtin.Word, %34 : $Builtin.Int8) // user: %235
  %233 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %235
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %234 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %235
  %235 = apply %234(%232, %35, %39, %195, %233) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %236

bb41:                                             // Preds: bb39 bb38
  %237 = struct_extract %4 : $UInt, #UInt._value  // user: %238
  %238 = builtin "truncOrBitCast_Int64_Int32"(%237 : $Builtin.Int64) : $Builtin.Int32 // user: %239
  %239 = struct $UInt32 (%238 : $Builtin.Int32)   // user: %242
  %240 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %242
  // function_ref _swift_stdlib_reportUnimplementedInitializerInFile
  %241 = function_ref @_swift_stdlib_reportUnimplementedInitializerInFile : $@convention(c) (UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UInt32, UInt32, UInt32) -> () // user: %242
  %242 = apply %241(%28, %77, %99, %135, %157, %193, %217, %239, %240) : $@convention(c) (UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UInt32, UInt32, UInt32) -> ()
  %243 = tuple ()                                 // user: %244
  return %243 : $()                               // id: %244

bb42:                                             // Preds: bb27
  %245 = string_literal utf8 "Fatal error"        // user: %247
  %246 = integer_literal $Builtin.Word, 11        // user: %248
  %247 = builtin "ptrtoint_Word"(%245 : $Builtin.RawPointer) : $Builtin.Word // user: %248
  %248 = struct $StaticString (%247 : $Builtin.Word, %246 : $Builtin.Word, %34 : $Builtin.Int8) // user: %251
  %249 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %251
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %250 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %251
  %251 = apply %250(%248, %35, %39, %41, %249) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %252

bb43:                                             // Preds: bb16
  %253 = string_literal utf8 "Fatal error"        // user: %255
  %254 = integer_literal $Builtin.Word, 11        // user: %256
  %255 = builtin "ptrtoint_Word"(%253 : $Builtin.RawPointer) : $Builtin.Word // user: %256
  %256 = struct $StaticString (%255 : $Builtin.Word, %254 : $Builtin.Word, %34 : $Builtin.Int8) // user: %259
  %257 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %259
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %258 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %259
  %259 = apply %258(%256, %35, %39, %41, %257) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %260

bb44:                                             // Preds: bb5
  %261 = string_literal utf8 "Fatal error"        // user: %263
  %262 = integer_literal $Builtin.Word, 11        // user: %264
  %263 = builtin "ptrtoint_Word"(%261 : $Builtin.RawPointer) : $Builtin.Word // user: %264
  %264 = struct $StaticString (%263 : $Builtin.Word, %262 : $Builtin.Word, %34 : $Builtin.Int8) // user: %267
  %265 = struct $UInt32 (%42 : $Builtin.Int32)    // user: %267
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %266 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %267
  %267 = apply %266(%264, %35, %39, %41, %265) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %268
} // end sil function '$Ss25_unimplementedInitializer9className04initD04file4line6columns5NeverOs12StaticStringV_A2JS2utFySRys5UInt8VGXEfU_yAMXEfU_yAMXEfU_'

// _fatalErrorMessage(_:_:file:line:flags:)
sil [noinline] [_semantics "arc.programtermination_point"] @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

// _swift_isClassOrObjCExistentialType
sil @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool

// specialized UnsafeBufferPointer.init(start:count:)
sil shared_external [serializable] @$SSR5start5countSRyxGSPyxGSg_SitcfCyXl_Tgq5 : $@convention(method) (Optional<UnsafePointer<AnyObject>>, Int, @thin UnsafeBufferPointer<AnyObject>.Type) -> UnsafeBufferPointer<AnyObject> {
// %0                                             // users: %54, %43, %41, %40, %30
// %1                                             // users: %45, %17
bb0(%0 : $Optional<UnsafePointer<AnyObject>>, %1 : $Int, %2 : $@thin UnsafeBufferPointer<AnyObject>.Type):
  %3 = string_literal utf8 "UnsafeBufferPointer with negative count" // user: %5
  %4 = integer_literal $Builtin.Word, 39          // user: %7
  %5 = builtin "ptrtoint_Word"(%3 : $Builtin.RawPointer) : $Builtin.Word // user: %7
  %6 = integer_literal $Builtin.Int8, 2           // users: %59, %34, %25, %11, %7
  %7 = struct $StaticString (%5 : $Builtin.Word, %4 : $Builtin.Word, %6 : $Builtin.Int8) // user: %62
  %8 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/UnsafeBufferPointer.swift" // user: %10
  %9 = integer_literal $Builtin.Word, 142         // user: %11
  %10 = builtin "ptrtoint_Word"(%8 : $Builtin.RawPointer) : $Builtin.Word // user: %11
  %11 = struct $StaticString (%10 : $Builtin.Word, %9 : $Builtin.Word, %6 : $Builtin.Int8) // users: %62, %37
  %12 = integer_literal $Builtin.Int64, 815       // user: %13
  %13 = struct $UInt (%12 : $Builtin.Int64)       // user: %62
  %14 = integer_literal $Builtin.Int32, 0         // users: %60, %35
  br bb1                                          // id: %15

bb1:                                              // Preds: bb0
  %16 = integer_literal $Builtin.Int64, 0         // users: %28, %18
  %17 = struct_extract %1 : $Int, #Int._value     // users: %28, %18
  %18 = builtin "cmp_slt_Int64"(%17 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int1 // user: %20
  %19 = integer_literal $Builtin.Int1, 0          // user: %20
  %20 = builtin "int_expect_Int1"(%18 : $Builtin.Int1, %19 : $Builtin.Int1) : $Builtin.Int1 // user: %21
  cond_br %20, bb11, bb2                          // id: %21

bb2:                                              // Preds: bb1
  %22 = string_literal utf8 "UnsafeBufferPointer has a nil start and nonzero count" // user: %24
  %23 = integer_literal $Builtin.Word, 53         // user: %25
  %24 = builtin "ptrtoint_Word"(%22 : $Builtin.RawPointer) : $Builtin.Word // user: %25
  %25 = struct $StaticString (%24 : $Builtin.Word, %23 : $Builtin.Word, %6 : $Builtin.Int8) // user: %37
  %26 = integer_literal $Builtin.Int64, 817       // user: %27
  %27 = struct $UInt (%26 : $Builtin.Int64)       // user: %37
  %28 = builtin "cmp_eq_Int64"(%17 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int1 // user: %29
  cond_br %28, bb6, bb3                           // id: %29

bb3:                                              // Preds: bb2
  switch_enum %0 : $Optional<UnsafePointer<AnyObject>>, case #Optional.some!enumelt.1: bb5, case #Optional.none!enumelt: bb4 // id: %30

bb4:                                              // Preds: bb3
  %31 = string_literal utf8 "Fatal error"         // user: %33
  %32 = integer_literal $Builtin.Word, 11         // user: %34
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word // user: %34
  %34 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %6 : $Builtin.Int8) // user: %37
  %35 = struct $UInt32 (%14 : $Builtin.Int32)     // user: %37
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %36 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %37
  %37 = apply %36(%34, %25, %11, %27, %35) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %38

bb5:                                              // Preds: bb3
  br bb9                                          // id: %39

bb6:                                              // Preds: bb2
  switch_enum %0 : $Optional<UnsafePointer<AnyObject>>, case #Optional.some!enumelt.1: bb8, case #Optional.none!enumelt: bb7 // id: %40

bb7:                                              // Preds: bb6
  br bb10(%0 : $Optional<UnsafePointer<AnyObject>>) // id: %41

bb8:                                              // Preds: bb6
  br bb9                                          // id: %42

bb9:                                              // Preds: bb8 bb5
  %43 = unchecked_enum_data %0 : $Optional<UnsafePointer<AnyObject>>, #Optional.some!enumelt.1 // user: %44
  %44 = struct_extract %43 : $UnsafePointer<AnyObject>, #UnsafePointer._rawValue // user: %47
  %45 = struct_extract %1 : $Int, #Int._value     // user: %46
  %46 = builtin "truncOrBitCast_Int64_Word"(%45 : $Builtin.Int64) : $Builtin.Word // user: %48
  %47 = pointer_to_address %44 : $Builtin.RawPointer to [strict] $*AnyObject // user: %48
  %48 = index_addr %47 : $*AnyObject, %46 : $Builtin.Word // user: %49
  %49 = address_to_pointer %48 : $*AnyObject to $Builtin.RawPointer // user: %50
  %50 = struct $UnsafePointer<AnyObject> (%49 : $Builtin.RawPointer) // user: %51
  %51 = enum $Optional<UnsafePointer<AnyObject>>, #Optional.some!enumelt.1, %50 : $UnsafePointer<AnyObject> // user: %52
  br bb10(%51 : $Optional<UnsafePointer<AnyObject>>) // id: %52

// %53                                            // user: %54
bb10(%53 : $Optional<UnsafePointer<AnyObject>>):  // Preds: bb9 bb7
  %54 = struct $UnsafeBufferPointer<AnyObject> (%0 : $Optional<UnsafePointer<AnyObject>>, %53 : $Optional<UnsafePointer<AnyObject>>) // user: %55
  return %54 : $UnsafeBufferPointer<AnyObject>    // id: %55

bb11:                                             // Preds: bb1
  %56 = string_literal utf8 "Fatal error"         // user: %58
  %57 = integer_literal $Builtin.Word, 11         // user: %59
  %58 = builtin "ptrtoint_Word"(%56 : $Builtin.RawPointer) : $Builtin.Word // user: %59
  %59 = struct $StaticString (%58 : $Builtin.Word, %57 : $Builtin.Word, %6 : $Builtin.Int8) // user: %62
  %60 = struct $UInt32 (%14 : $Builtin.Int32)     // user: %62
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %61 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %62
  %62 = apply %61(%59, %7, %11, %13, %60) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %63
} // end sil function '$SSR5start5countSRyxGSPyxGSg_SitcfCyXl_Tgq5'

// specialized ManagedBufferPointer.init(_uncheckedBufferClass:minimumCapacity:)
sil shared_external [serializable] @$Ss20ManagedBufferPointerV010_uncheckedB5Class15minimumCapacityAByxq_GyXlXp_SitcfCs05_HeapB6HeaderVySiG_yXlTgq5 : $@convention(method) (@thick AnyObject.Type, Int, @thin ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>.Type) -> @owned ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> {
// %0                                             // user: %104
// %1                                             // user: %78
bb0(%0 : $@thick AnyObject.Type, %1 : $Int, %2 : $@thin ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>.Type):
  %3 = builtin "onFastPath"() : $()
  %4 = builtin "onFastPath"() : $()
  %5 = metatype $@thick HeapObject.Type           // users: %88, %6
  %6 = builtin "sizeof"<HeapObject>(%5 : $@thick HeapObject.Type) : $Builtin.Word // user: %7
  %7 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64 // user: %12
  %8 = metatype $@thick _HeapBufferHeader<Int>.Type // users: %47, %9
  %9 = builtin "alignof"<_HeapBufferHeader<Int>>(%8 : $@thick _HeapBufferHeader<Int>.Type) : $Builtin.Word // user: %10
  %10 = builtin "zextOrBitCast_Word_Int64"(%9 : $Builtin.Word) : $Builtin.Int64 // users: %93, %90, %20, %12
  %11 = integer_literal $Builtin.Int1, -1         // users: %83, %79, %56, %49, %12
  %12 = builtin "uadd_with_overflow_Int64"(%7 : $Builtin.Int64, %10 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %14, %13
  %13 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 0 // user: %18
  %14 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 1 // user: %15
  cond_fail %14 : $Builtin.Int1                   // id: %15
  %16 = integer_literal $Builtin.Int64, 1         // users: %100, %66, %62, %60, %25, %20, %18
  %17 = integer_literal $Builtin.Int1, 0          // users: %100, %74, %66, %64, %62, %60, %45, %25, %23, %20, %18
  %18 = builtin "usub_with_overflow_Int64"(%13 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0 // user: %27
  %20 = builtin "usub_with_overflow_Int64"(%10 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %21
  %21 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 0 // user: %23
  %22 = integer_literal $Builtin.Int64, 0         // users: %71, %64, %42, %23
  %23 = builtin "usub_with_overflow_Int64"(%22 : $Builtin.Int64, %21 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %24
  %24 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 0 // user: %25
  %25 = builtin "usub_with_overflow_Int64"(%24 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %26
  %26 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 0 // user: %27
  %27 = builtin "and_Int64"(%19 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int64 // users: %49, %44, %42
  %28 = string_literal utf8 "Not enough bits to represent a signed value" // user: %30
  %29 = integer_literal $Builtin.Word, 43         // user: %32
  %30 = builtin "ptrtoint_Word"(%28 : $Builtin.RawPointer) : $Builtin.Word // user: %32
  %31 = integer_literal $Builtin.Int8, 2          // users: %120, %112, %36, %32
  %32 = struct $StaticString (%30 : $Builtin.Word, %29 : $Builtin.Word, %31 : $Builtin.Int8) // users: %123, %115
  %33 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %35
  %34 = integer_literal $Builtin.Word, 131        // user: %36
  %35 = builtin "ptrtoint_Word"(%33 : $Builtin.RawPointer) : $Builtin.Word // user: %36
  %36 = struct $StaticString (%35 : $Builtin.Word, %34 : $Builtin.Word, %31 : $Builtin.Int8) // users: %123, %115
  %37 = integer_literal $Builtin.Int64, 3555      // user: %38
  %38 = struct $UInt (%37 : $Builtin.Int64)       // users: %123, %115
  %39 = integer_literal $Builtin.Int32, 0         // users: %121, %113
  br bb1                                          // id: %40

bb1:                                              // Preds: bb0
  %41 = integer_literal $Builtin.Int64, 9223372036854775807 // user: %44
  %42 = builtin "cmp_slt_Int64"(%27 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1 // user: %43
  cond_br %42, bb2, bb3                           // id: %43

bb2:                                              // Preds: bb1
  %44 = builtin "cmp_ult_Int64"(%41 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int1 // user: %45
  %45 = builtin "int_expect_Int1"(%44 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1 // user: %46
  cond_br %45, bb14, bb3                          // id: %46

bb3:                                              // Preds: bb2 bb1
  %47 = builtin "sizeof"<_HeapBufferHeader<Int>>(%8 : $@thick _HeapBufferHeader<Int>.Type) : $Builtin.Word // user: %48
  %48 = builtin "zextOrBitCast_Word_Int64"(%47 : $Builtin.Word) : $Builtin.Int64 // user: %49
  %49 = builtin "sadd_with_overflow_Int64"(%27 : $Builtin.Int64, %48 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %51, %50
  %50 = tuple_extract %49 : $(Builtin.Int64, Builtin.Int1), 0 // user: %56
  %51 = tuple_extract %49 : $(Builtin.Int64, Builtin.Int1), 1 // user: %52
  cond_fail %51 : $Builtin.Int1                   // id: %52
  %53 = metatype $@thick AnyObject.Protocol       // users: %76, %54
  %54 = builtin "alignof"<AnyObject>(%53 : $@thick AnyObject.Protocol) : $Builtin.Word // user: %55
  %55 = builtin "zextOrBitCast_Word_Int64"(%54 : $Builtin.Word) : $Builtin.Int64 // users: %92, %90, %62, %56
  %56 = builtin "uadd_with_overflow_Int64"(%50 : $Builtin.Int64, %55 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %58, %57
  %57 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 0 // user: %60
  %58 = tuple_extract %56 : $(Builtin.Int64, Builtin.Int1), 1 // user: %59
  cond_fail %58 : $Builtin.Int1                   // id: %59
  %60 = builtin "usub_with_overflow_Int64"(%57 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %61
  %61 = tuple_extract %60 : $(Builtin.Int64, Builtin.Int1), 0 // user: %68
  %62 = builtin "usub_with_overflow_Int64"(%55 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %63
  %63 = tuple_extract %62 : $(Builtin.Int64, Builtin.Int1), 0 // user: %64
  %64 = builtin "usub_with_overflow_Int64"(%22 : $Builtin.Int64, %63 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %65
  %65 = tuple_extract %64 : $(Builtin.Int64, Builtin.Int1), 0 // user: %66
  %66 = builtin "usub_with_overflow_Int64"(%65 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %67
  %67 = tuple_extract %66 : $(Builtin.Int64, Builtin.Int1), 0 // user: %68
  %68 = builtin "and_Int64"(%61 : $Builtin.Int64, %67 : $Builtin.Int64) : $Builtin.Int64 // users: %83, %73, %71
  br bb4                                          // id: %69

bb4:                                              // Preds: bb3
  %70 = integer_literal $Builtin.Int64, 9223372036854775807 // user: %73
  %71 = builtin "cmp_slt_Int64"(%68 : $Builtin.Int64, %22 : $Builtin.Int64) : $Builtin.Int1 // user: %72
  cond_br %71, bb5, bb6                           // id: %72

bb5:                                              // Preds: bb4
  %73 = builtin "cmp_ult_Int64"(%70 : $Builtin.Int64, %68 : $Builtin.Int64) : $Builtin.Int1 // user: %74
  %74 = builtin "int_expect_Int1"(%73 : $Builtin.Int1, %17 : $Builtin.Int1) : $Builtin.Int1 // user: %75
  cond_br %74, bb13, bb6                          // id: %75

bb6:                                              // Preds: bb5 bb4
  %76 = builtin "strideof"<AnyObject>(%53 : $@thick AnyObject.Protocol) : $Builtin.Word // user: %77
  %77 = builtin "zextOrBitCast_Word_Int64"(%76 : $Builtin.Word) : $Builtin.Int64 // user: %79
  %78 = struct_extract %1 : $Int, #Int._value     // user: %79
  %79 = builtin "smul_with_overflow_Int64"(%78 : $Builtin.Int64, %77 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %81, %80
  %80 = tuple_extract %79 : $(Builtin.Int64, Builtin.Int1), 0 // user: %83
  %81 = tuple_extract %79 : $(Builtin.Int64, Builtin.Int1), 1 // user: %82
  cond_fail %81 : $Builtin.Int1                   // id: %82
  %83 = builtin "sadd_with_overflow_Int64"(%68 : $Builtin.Int64, %80 : $Builtin.Int64, %11 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %85, %84
  %84 = tuple_extract %83 : $(Builtin.Int64, Builtin.Int1), 0 // user: %87
  %85 = tuple_extract %83 : $(Builtin.Int64, Builtin.Int1), 1 // user: %86
  cond_fail %85 : $Builtin.Int1                   // id: %86
  %87 = struct $Int (%84 : $Builtin.Int64)        // user: %104
  %88 = builtin "alignof"<HeapObject>(%5 : $@thick HeapObject.Type) : $Builtin.Word // user: %89
  %89 = builtin "zextOrBitCast_Word_Int64"(%88 : $Builtin.Word) : $Builtin.Int64 // users: %98, %95
  %90 = builtin "cmp_slt_Int64"(%55 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1 // user: %91
  cond_br %90, bb8, bb7                           // id: %91

bb7:                                              // Preds: bb6
  br bb9(%55 : $Builtin.Int64)                    // id: %92

bb8:                                              // Preds: bb6
  br bb9(%10 : $Builtin.Int64)                    // id: %93

// %94                                            // users: %97, %95
bb9(%94 : $Builtin.Int64):                        // Preds: bb8 bb7
  %95 = builtin "cmp_slt_Int64"(%94 : $Builtin.Int64, %89 : $Builtin.Int64) : $Builtin.Int1 // user: %96
  cond_br %95, bb11, bb10                         // id: %96

bb10:                                             // Preds: bb9
  br bb12(%94 : $Builtin.Int64)                   // id: %97

bb11:                                             // Preds: bb9
  br bb12(%89 : $Builtin.Int64)                   // id: %98

// %99                                            // user: %100
bb12(%99 : $Builtin.Int64):                       // Preds: bb11 bb10
  %100 = builtin "ssub_with_overflow_Int64"(%99 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %101
  %101 = tuple_extract %100 : $(Builtin.Int64, Builtin.Int1), 0 // user: %102
  %102 = struct $Int (%101 : $Builtin.Int64)      // user: %104
  // function_ref swift_bufferAllocate
  %103 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject // user: %104
  %104 = apply %103(%0, %87, %102) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject // user: %105
  %105 = open_existential_ref %104 : $AnyObject to $@opened("7A1E654E-3067-11E8-B33A-28CFE91E5819") AnyObject // user: %106
  %106 = unchecked_ref_cast %105 : $@opened("7A1E654E-3067-11E8-B33A-28CFE91E5819") AnyObject to $Builtin.NativeObject // user: %107
  %107 = struct $ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> (%106 : $Builtin.NativeObject) // user: %108
  return %107 : $ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> // id: %108

bb13:                                             // Preds: bb5
  %109 = string_literal utf8 "Fatal error"        // user: %111
  %110 = integer_literal $Builtin.Word, 11        // user: %112
  %111 = builtin "ptrtoint_Word"(%109 : $Builtin.RawPointer) : $Builtin.Word // user: %112
  %112 = struct $StaticString (%111 : $Builtin.Word, %110 : $Builtin.Word, %31 : $Builtin.Int8) // user: %115
  %113 = struct $UInt32 (%39 : $Builtin.Int32)    // user: %115
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %114 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %115
  %115 = apply %114(%112, %32, %36, %38, %113) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %116

bb14:                                             // Preds: bb2
  %117 = string_literal utf8 "Fatal error"        // user: %119
  %118 = integer_literal $Builtin.Word, 11        // user: %120
  %119 = builtin "ptrtoint_Word"(%117 : $Builtin.RawPointer) : $Builtin.Word // user: %120
  %120 = struct $StaticString (%119 : $Builtin.Word, %118 : $Builtin.Word, %31 : $Builtin.Int8) // user: %123
  %121 = struct $UInt32 (%39 : $Builtin.Int32)    // user: %123
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %122 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %123
  %123 = apply %122(%120, %32, %36, %38, %121) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %124
} // end sil function '$Ss20ManagedBufferPointerV010_uncheckedB5Class15minimumCapacityAByxq_GyXlXp_SitcfCs05_HeapB6HeaderVySiG_yXlTgq5'

// specialized ManagedBufferPointer._elementPointer.getter
sil shared_external [serializable] @$Ss20ManagedBufferPointerV08_elementC0Spyq_Gvgs05_HeapB6HeaderVySiG_yXlTgq5 : $@convention(method) (@guaranteed ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>) -> UnsafeMutablePointer<AnyObject> {
// %0                                             // user: %2
bb0(%0 : $ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>):
  %1 = builtin "onFastPath"() : $()
  %2 = struct_extract %0 : $ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject>, #ManagedBufferPointer._nativeBuffer // user: %3
  %3 = ref_to_raw_pointer %2 : $Builtin.NativeObject to $Builtin.RawPointer // user: %78
  %4 = builtin "onFastPath"() : $()
  %5 = builtin "onFastPath"() : $()
  %6 = metatype $@thick HeapObject.Type           // user: %7
  %7 = builtin "sizeof"<HeapObject>(%6 : $@thick HeapObject.Type) : $Builtin.Word // user: %8
  %8 = builtin "zextOrBitCast_Word_Int64"(%7 : $Builtin.Word) : $Builtin.Int64 // user: %13
  %9 = metatype $@thick _HeapBufferHeader<Int>.Type // users: %48, %10
  %10 = builtin "alignof"<_HeapBufferHeader<Int>>(%9 : $@thick _HeapBufferHeader<Int>.Type) : $Builtin.Word // user: %11
  %11 = builtin "zextOrBitCast_Word_Int64"(%10 : $Builtin.Word) : $Builtin.Int64 // users: %21, %13
  %12 = integer_literal $Builtin.Int1, -1         // users: %57, %50, %13
  %13 = builtin "uadd_with_overflow_Int64"(%8 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0 // user: %19
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1 // user: %16
  cond_fail %15 : $Builtin.Int1                   // id: %16
  %17 = integer_literal $Builtin.Int64, 1         // users: %67, %63, %61, %26, %21, %19
  %18 = integer_literal $Builtin.Int1, 0          // users: %75, %67, %65, %63, %61, %46, %26, %24, %21, %19
  %19 = builtin "usub_with_overflow_Int64"(%14 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %20
  %20 = tuple_extract %19 : $(Builtin.Int64, Builtin.Int1), 0 // user: %28
  %21 = builtin "usub_with_overflow_Int64"(%11 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %22
  %22 = tuple_extract %21 : $(Builtin.Int64, Builtin.Int1), 0 // user: %24
  %23 = integer_literal $Builtin.Int64, 0         // users: %72, %65, %43, %24
  %24 = builtin "usub_with_overflow_Int64"(%23 : $Builtin.Int64, %22 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %25
  %25 = tuple_extract %24 : $(Builtin.Int64, Builtin.Int1), 0 // user: %26
  %26 = builtin "usub_with_overflow_Int64"(%25 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0 // user: %28
  %28 = builtin "and_Int64"(%20 : $Builtin.Int64, %27 : $Builtin.Int64) : $Builtin.Int64 // users: %50, %45, %43
  %29 = string_literal utf8 "Not enough bits to represent a signed value" // user: %31
  %30 = integer_literal $Builtin.Word, 43         // user: %33
  %31 = builtin "ptrtoint_Word"(%29 : $Builtin.RawPointer) : $Builtin.Word // user: %33
  %32 = integer_literal $Builtin.Int8, 2          // users: %92, %84, %37, %33
  %33 = struct $StaticString (%31 : $Builtin.Word, %30 : $Builtin.Word, %32 : $Builtin.Int8) // users: %95, %87
  %34 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %36
  %35 = integer_literal $Builtin.Word, 131        // user: %37
  %36 = builtin "ptrtoint_Word"(%34 : $Builtin.RawPointer) : $Builtin.Word // user: %37
  %37 = struct $StaticString (%36 : $Builtin.Word, %35 : $Builtin.Word, %32 : $Builtin.Int8) // users: %95, %87
  %38 = integer_literal $Builtin.Int64, 3555      // user: %39
  %39 = struct $UInt (%38 : $Builtin.Int64)       // users: %95, %87
  %40 = integer_literal $Builtin.Int32, 0         // users: %93, %85
  br bb1                                          // id: %41

bb1:                                              // Preds: bb0
  %42 = integer_literal $Builtin.Int64, 9223372036854775807 // user: %45
  %43 = builtin "cmp_slt_Int64"(%28 : $Builtin.Int64, %23 : $Builtin.Int64) : $Builtin.Int1 // user: %44
  cond_br %43, bb2, bb3                           // id: %44

bb2:                                              // Preds: bb1
  %45 = builtin "cmp_ult_Int64"(%42 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1 // user: %46
  %46 = builtin "int_expect_Int1"(%45 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1 // user: %47
  cond_br %46, bb8, bb3                           // id: %47

bb3:                                              // Preds: bb2 bb1
  %48 = builtin "sizeof"<_HeapBufferHeader<Int>>(%9 : $@thick _HeapBufferHeader<Int>.Type) : $Builtin.Word // user: %49
  %49 = builtin "zextOrBitCast_Word_Int64"(%48 : $Builtin.Word) : $Builtin.Int64 // user: %50
  %50 = builtin "sadd_with_overflow_Int64"(%28 : $Builtin.Int64, %49 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %52, %51
  %51 = tuple_extract %50 : $(Builtin.Int64, Builtin.Int1), 0 // user: %57
  %52 = tuple_extract %50 : $(Builtin.Int64, Builtin.Int1), 1 // user: %53
  cond_fail %52 : $Builtin.Int1                   // id: %53
  %54 = metatype $@thick AnyObject.Protocol       // user: %55
  %55 = builtin "alignof"<AnyObject>(%54 : $@thick AnyObject.Protocol) : $Builtin.Word // user: %56
  %56 = builtin "zextOrBitCast_Word_Int64"(%55 : $Builtin.Word) : $Builtin.Int64 // users: %63, %57
  %57 = builtin "uadd_with_overflow_Int64"(%51 : $Builtin.Int64, %56 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %59, %58
  %58 = tuple_extract %57 : $(Builtin.Int64, Builtin.Int1), 0 // user: %61
  %59 = tuple_extract %57 : $(Builtin.Int64, Builtin.Int1), 1 // user: %60
  cond_fail %59 : $Builtin.Int1                   // id: %60
  %61 = builtin "usub_with_overflow_Int64"(%58 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %62
  %62 = tuple_extract %61 : $(Builtin.Int64, Builtin.Int1), 0 // user: %69
  %63 = builtin "usub_with_overflow_Int64"(%56 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %64
  %64 = tuple_extract %63 : $(Builtin.Int64, Builtin.Int1), 0 // user: %65
  %65 = builtin "usub_with_overflow_Int64"(%23 : $Builtin.Int64, %64 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %66
  %66 = tuple_extract %65 : $(Builtin.Int64, Builtin.Int1), 0 // user: %67
  %67 = builtin "usub_with_overflow_Int64"(%66 : $Builtin.Int64, %17 : $Builtin.Int64, %18 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %68
  %68 = tuple_extract %67 : $(Builtin.Int64, Builtin.Int1), 0 // user: %69
  %69 = builtin "and_Int64"(%62 : $Builtin.Int64, %68 : $Builtin.Int64) : $Builtin.Int64 // users: %77, %74, %72
  br bb4                                          // id: %70

bb4:                                              // Preds: bb3
  %71 = integer_literal $Builtin.Int64, 9223372036854775807 // user: %74
  %72 = builtin "cmp_slt_Int64"(%69 : $Builtin.Int64, %23 : $Builtin.Int64) : $Builtin.Int1 // user: %73
  cond_br %72, bb5, bb6                           // id: %73

bb5:                                              // Preds: bb4
  %74 = builtin "cmp_ult_Int64"(%71 : $Builtin.Int64, %69 : $Builtin.Int64) : $Builtin.Int1 // user: %75
  %75 = builtin "int_expect_Int1"(%74 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1 // user: %76
  cond_br %75, bb7, bb6                           // id: %76

bb6:                                              // Preds: bb5 bb4
  %77 = builtin "truncOrBitCast_Int64_Word"(%69 : $Builtin.Int64) : $Builtin.Word // user: %78
  %78 = index_raw_pointer %3 : $Builtin.RawPointer, %77 : $Builtin.Word // user: %79
  %79 = struct $UnsafeMutablePointer<AnyObject> (%78 : $Builtin.RawPointer) // user: %80
  return %79 : $UnsafeMutablePointer<AnyObject>   // id: %80

bb7:                                              // Preds: bb5
  %81 = string_literal utf8 "Fatal error"         // user: %83
  %82 = integer_literal $Builtin.Word, 11         // user: %84
  %83 = builtin "ptrtoint_Word"(%81 : $Builtin.RawPointer) : $Builtin.Word // user: %84
  %84 = struct $StaticString (%83 : $Builtin.Word, %82 : $Builtin.Word, %32 : $Builtin.Int8) // user: %87
  %85 = struct $UInt32 (%40 : $Builtin.Int32)     // user: %87
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %86 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %87
  %87 = apply %86(%84, %33, %37, %39, %85) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %88

bb8:                                              // Preds: bb2
  %89 = string_literal utf8 "Fatal error"         // user: %91
  %90 = integer_literal $Builtin.Word, 11         // user: %92
  %91 = builtin "ptrtoint_Word"(%89 : $Builtin.RawPointer) : $Builtin.Word // user: %92
  %92 = struct $StaticString (%91 : $Builtin.Word, %90 : $Builtin.Word, %32 : $Builtin.Int8) // user: %95
  %93 = struct $UInt32 (%40 : $Builtin.Int32)     // user: %95
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %94 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %95
  %95 = apply %94(%92, %33, %37, %39, %93) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %96
} // end sil function '$Ss20ManagedBufferPointerV08_elementC0Spyq_Gvgs05_HeapB6HeaderVySiG_yXlTgq5'

// _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)
sil @$Ss38_bridgeAnythingNonVerbatimToObjectiveCyyXlxlF : $@convention(thin) <τ_0_0> (@in τ_0_0) -> @owned AnyObject

// ManagedBuffer.init(_doNotCallMe:)
sil public_external [serialized] @$Ss13ManagedBufferC12_doNotCallMeAByxq_Gyt_tcfc : $@convention(method) <Header, Element> (@owned ManagedBuffer<Header, Element>) -> @owned ManagedBuffer<Header, Element> {
bb0(%0 : $ManagedBuffer<Header, Element>):
  unreachable                                     // id: %1
} // end sil function '$Ss13ManagedBufferC12_doNotCallMeAByxq_Gyt_tcfc'

// ManagedBuffer.__deallocating_deinit
sil @$Ss13ManagedBufferCfD : $@convention(method) <τ_0_0, τ_0_1> (@owned ManagedBuffer<τ_0_0, τ_0_1>) -> ()

// swift_bufferAllocate
sil [serialized] @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject

// specialized UnsafeBufferPointer.count.getter
sil shared_external [serializable] @$SSR5countSivgs5UInt8V_Tgq5 : $@convention(method) (UnsafeBufferPointer<UInt8>) -> Int {
// %0                                             // users: %5, %1
bb0(%0 : $UnsafeBufferPointer<UInt8>):
  %1 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position // user: %2
  switch_enum %1 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb2, case #Optional.none!enumelt: bb1 // id: %2

bb1:                                              // Preds: bb0
  br bb4                                          // id: %3

// %4                                             // user: %13
bb2(%4 : $UnsafePointer<UInt8>):                  // Preds: bb0
  %5 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end // user: %6
  switch_enum %5 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb5, case #Optional.none!enumelt: bb3 // id: %6

bb3:                                              // Preds: bb2
  br bb4                                          // id: %7

bb4:                                              // Preds: bb3 bb1
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  br bb9(%8 : $Builtin.Int64)                     // id: %9

// %10                                            // user: %11
bb5(%10 : $UnsafePointer<UInt8>):                 // Preds: bb2
  %11 = struct_extract %10 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue // user: %12
  %12 = builtin "ptrtoint_Word"(%11 : $Builtin.RawPointer) : $Builtin.Word // user: %15
  %13 = struct_extract %4 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue // user: %14
  %14 = builtin "ptrtoint_Word"(%13 : $Builtin.RawPointer) : $Builtin.Word // user: %15
  %15 = builtin "sub_Word"(%12 : $Builtin.Word, %14 : $Builtin.Word) : $Builtin.Word // user: %16
  %16 = builtin "zextOrBitCast_Word_Int64"(%15 : $Builtin.Word) : $Builtin.Int64 // users: %32, %26
  %17 = metatype $@thick UInt8.Type               // user: %18
  %18 = builtin "strideof"<UInt8>(%17 : $@thick UInt8.Type) : $Builtin.Word // user: %19
  %19 = builtin "zextOrBitCast_Word_Int64"(%18 : $Builtin.Word) : $Builtin.Int64 // users: %32, %29, %21
  %20 = integer_literal $Builtin.Int64, 0         // user: %21
  %21 = builtin "cmp_eq_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1 // user: %23
  %22 = integer_literal $Builtin.Int1, 0          // users: %30, %23
  %23 = builtin "int_expect_Int1"(%21 : $Builtin.Int1, %22 : $Builtin.Int1) : $Builtin.Int1 // user: %24
  cond_br %23, bb12, bb6                          // id: %24

bb6:                                              // Preds: bb5
  %25 = integer_literal $Builtin.Int64, -9223372036854775808 // user: %26
  %26 = builtin "cmp_eq_Int64"(%16 : $Builtin.Int64, %25 : $Builtin.Int64) : $Builtin.Int1 // user: %27
  cond_br %26, bb7, bb8                           // id: %27

bb7:                                              // Preds: bb6
  %28 = integer_literal $Builtin.Int64, -1        // user: %29
  %29 = builtin "cmp_eq_Int64"(%19 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1 // user: %30
  %30 = builtin "int_expect_Int1"(%29 : $Builtin.Int1, %22 : $Builtin.Int1) : $Builtin.Int1 // user: %31
  cond_br %30, bb10, bb8                          // id: %31

bb8:                                              // Preds: bb7 bb6
  %32 = builtin "sdiv_Int64"(%16 : $Builtin.Int64, %19 : $Builtin.Int64) : $Builtin.Int64 // user: %33
  br bb9(%32 : $Builtin.Int64)                    // id: %33

// %34                                            // user: %35
bb9(%34 : $Builtin.Int64):                        // Preds: bb8 bb4
  %35 = struct $Int (%34 : $Builtin.Int64)        // user: %36
  return %35 : $Int                               // id: %36

bb10:                                             // Preds: bb7
  %37 = string_literal utf8 "Division results in an overflow" // user: %39
  %38 = integer_literal $Builtin.Word, 31         // user: %41
  %39 = builtin "ptrtoint_Word"(%37 : $Builtin.RawPointer) : $Builtin.Word // user: %41
  %40 = integer_literal $Builtin.Int8, 2          // users: %53, %45, %41
  %41 = struct $StaticString (%39 : $Builtin.Word, %38 : $Builtin.Word, %40 : $Builtin.Int8) // user: %56
  %42 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %44
  %43 = integer_literal $Builtin.Word, 131        // user: %45
  %44 = builtin "ptrtoint_Word"(%42 : $Builtin.RawPointer) : $Builtin.Word // user: %45
  %45 = struct $StaticString (%44 : $Builtin.Word, %43 : $Builtin.Word, %40 : $Builtin.Int8) // user: %56
  %46 = integer_literal $Builtin.Int64, 19252     // user: %47
  %47 = struct $UInt (%46 : $Builtin.Int64)       // user: %56
  %48 = integer_literal $Builtin.Int32, 0         // user: %54
  br bb11                                         // id: %49

bb11:                                             // Preds: bb10
  %50 = string_literal utf8 "Fatal error"         // user: %52
  %51 = integer_literal $Builtin.Word, 11         // user: %53
  %52 = builtin "ptrtoint_Word"(%50 : $Builtin.RawPointer) : $Builtin.Word // user: %53
  %53 = struct $StaticString (%52 : $Builtin.Word, %51 : $Builtin.Word, %40 : $Builtin.Int8) // user: %56
  %54 = struct $UInt32 (%48 : $Builtin.Int32)     // user: %56
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %55 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %56
  %56 = apply %55(%53, %41, %45, %47, %54) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %57

bb12:                                             // Preds: bb5
  %58 = string_literal utf8 "Division by zero"    // user: %60
  %59 = integer_literal $Builtin.Word, 16         // user: %62
  %60 = builtin "ptrtoint_Word"(%58 : $Builtin.RawPointer) : $Builtin.Word // user: %62
  %61 = integer_literal $Builtin.Int8, 2          // users: %74, %66, %62
  %62 = struct $StaticString (%60 : $Builtin.Word, %59 : $Builtin.Word, %61 : $Builtin.Int8) // user: %77
  %63 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %65
  %64 = integer_literal $Builtin.Word, 131        // user: %66
  %65 = builtin "ptrtoint_Word"(%63 : $Builtin.RawPointer) : $Builtin.Word // user: %66
  %66 = struct $StaticString (%65 : $Builtin.Word, %64 : $Builtin.Word, %61 : $Builtin.Int8) // user: %77
  %67 = integer_literal $Builtin.Int64, 19245     // user: %68
  %68 = struct $UInt (%67 : $Builtin.Int64)       // user: %77
  %69 = integer_literal $Builtin.Int32, 0         // user: %75
  br bb13                                         // id: %70

bb13:                                             // Preds: bb12
  %71 = string_literal utf8 "Fatal error"         // user: %73
  %72 = integer_literal $Builtin.Word, 11         // user: %74
  %73 = builtin "ptrtoint_Word"(%71 : $Builtin.RawPointer) : $Builtin.Word // user: %74
  %74 = struct $StaticString (%73 : $Builtin.Word, %72 : $Builtin.Word, %61 : $Builtin.Int8) // user: %77
  %75 = struct $UInt32 (%69 : $Builtin.Int32)     // user: %77
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %76 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %77
  %77 = apply %76(%74, %62, %66, %68, %75) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %78
} // end sil function '$SSR5countSivgs5UInt8V_Tgq5'

// _swift_stdlib_reportUnimplementedInitializer
sil [clang _swift_stdlib_reportUnimplementedInitializer] @_swift_stdlib_reportUnimplementedInitializer : $@convention(c) (UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UInt32) -> ()

// _swift_stdlib_reportUnimplementedInitializerInFile
sil [clang _swift_stdlib_reportUnimplementedInitializerInFile] @_swift_stdlib_reportUnimplementedInitializerInFile : $@convention(c) (UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UnsafePointer<UInt8>, Int32, UInt32, UInt32, UInt32) -> ()

// Array.init(_uninitializedCount:)
sil public_external [serialized] @$SSa19_uninitializedCountSayxGSi_tcfC : $@convention(method) <Element> (Int, @thin Array<Element>.Type) -> @owned Array<Element> {
// %0                                             // users: %67, %33, %26, %16
bb0(%0 : $Int, %1 : $@thin Array<Element>.Type):
  %2 = string_literal utf8 "Can't construct Array with count < 0" // user: %4
  %3 = integer_literal $Builtin.Word, 36          // user: %6
  %4 = builtin "ptrtoint_Word"(%2 : $Builtin.RawPointer) : $Builtin.Word // user: %6
  %5 = integer_literal $Builtin.Int8, 2           // users: %78, %10, %6
  %6 = struct $StaticString (%4 : $Builtin.Word, %3 : $Builtin.Word, %5 : $Builtin.Int8) // user: %81
  %7 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Arrays.swift" // user: %9
  %8 = integer_literal $Builtin.Word, 129         // user: %10
  %9 = builtin "ptrtoint_Word"(%7 : $Builtin.RawPointer) : $Builtin.Word // user: %10
  %10 = struct $StaticString (%9 : $Builtin.Word, %8 : $Builtin.Word, %5 : $Builtin.Int8) // user: %81
  %11 = integer_literal $Builtin.Int64, 3515      // user: %12
  %12 = struct $UInt (%11 : $Builtin.Int64)       // user: %81
  %13 = integer_literal $Builtin.Int32, 0         // user: %79
  br bb1                                          // id: %14

bb1:                                              // Preds: bb0
  %15 = integer_literal $Builtin.Int64, 0         // user: %17
  %16 = struct_extract %0 : $Int, #Int._value     // user: %17
  %17 = builtin "cmp_slt_Int64"(%16 : $Builtin.Int64, %15 : $Builtin.Int64) : $Builtin.Int1 // user: %19
  %18 = integer_literal $Builtin.Int1, 0          // user: %19
  %19 = builtin "int_expect_Int1"(%17 : $Builtin.Int1, %18 : $Builtin.Int1) : $Builtin.Int1 // user: %20
  cond_br %19, bb14, bb2                          // id: %20

bb2:                                              // Preds: bb1
  %21 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage // user: %22
  %22 = address_to_pointer %21 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer // user: %23
  %23 = raw_pointer_to_ref %22 : $Builtin.RawPointer to $_EmptyArrayStorage // users: %29, %24
  %24 = unchecked_ref_cast %23 : $_EmptyArrayStorage to $Builtin.BridgeObject // user: %30
  %25 = integer_literal $Builtin.Int64, 0         // user: %27
  %26 = struct_extract %0 : $Int, #Int._value     // user: %27
  %27 = builtin "cmp_slt_Int64"(%25 : $Builtin.Int64, %26 : $Builtin.Int64) : $Builtin.Int1 // user: %28
  cond_br %27, bb4, bb3                           // id: %28

bb3:                                              // Preds: bb2
  strong_retain %23 : $_EmptyArrayStorage         // id: %29
  br bb13(%24 : $Builtin.BridgeObject)            // id: %30

bb4:                                              // Preds: bb2
  %31 = metatype $@thin Array<Element>.Type       // user: %33
  // function_ref static Array._allocateBufferUninitialized(minimumCapacity:)
  %32 = function_ref @$SSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> // user: %33
  %33 = apply %32<Element>(%0, %31) : $@convention(method) <τ_0_0> (Int, @thin Array<τ_0_0>.Type) -> @owned _ArrayBuffer<τ_0_0> // user: %34
  %34 = struct_extract %33 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage // user: %35
  %35 = struct_extract %34 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue // users: %69, %68, %61, %59, %54, %50, %45
  %36 = metatype $@thick Element.Type             // users: %46, %37
  %37 = builtin "canBeClass"<Element>(%36 : $@thick Element.Type) : $Builtin.Int8 // users: %42, %39
  %38 = integer_literal $Builtin.Int8, 0          // user: %39
  %39 = builtin "cmp_eq_Int8"(%37 : $Builtin.Int8, %38 : $Builtin.Int8) : $Builtin.Int1 // user: %40
  cond_br %39, bb8, bb5                           // id: %40

bb5:                                              // Preds: bb4
  %41 = integer_literal $Builtin.Int8, 1          // user: %42
  %42 = builtin "cmp_eq_Int8"(%37 : $Builtin.Int8, %41 : $Builtin.Int8) : $Builtin.Int1 // user: %43
  cond_br %42, bb7, bb6                           // id: %43

bb6:                                              // Preds: bb5
  // function_ref _swift_isClassOrObjCExistentialType
  %44 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %46
  strong_retain %35 : $Builtin.BridgeObject       // id: %45
  %46 = apply %44<Element>(%36) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %47
  br bb9(%46 : $Bool)                             // id: %47

bb7:                                              // Preds: bb5
  %48 = integer_literal $Builtin.Int1, -1         // user: %49
  %49 = struct $Bool (%48 : $Builtin.Int1)        // user: %51
  strong_retain %35 : $Builtin.BridgeObject       // id: %50
  br bb9(%49 : $Bool)                             // id: %51

bb8:                                              // Preds: bb4
  %52 = integer_literal $Builtin.Int1, 0          // user: %53
  %53 = struct $Bool (%52 : $Builtin.Int1)        // user: %55
  strong_retain %35 : $Builtin.BridgeObject       // id: %54
  br bb9(%53 : $Bool)                             // id: %55

// %56                                            // user: %57
bb9(%56 : $Bool):                                 // Preds: bb8 bb7 bb6
  %57 = struct_extract %56 : $Bool, #Bool._value  // user: %58
  cond_br %57, bb11, bb10                         // id: %58

bb10:                                             // Preds: bb9
  %59 = unchecked_ref_cast %35 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase // user: %60
  br bb12(%59 : $_ContiguousArrayStorageBase)     // id: %60

bb11:                                             // Preds: bb9
  %61 = bridge_object_to_ref %35 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase // user: %62
  br bb12(%61 : $_ContiguousArrayStorageBase)     // id: %62

// %63                                            // user: %64
bb12(%63 : $_ContiguousArrayStorageBase):         // Preds: bb11 bb10
  %64 = ref_element_addr %63 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %65
  %65 = struct_element_addr %64 : $*_ArrayBody, #_ArrayBody._storage // user: %66
  %66 = struct_element_addr %65 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count // user: %67
  store %0 to %66 : $*Int                         // id: %67
  strong_release %35 : $Builtin.BridgeObject      // id: %68
  br bb13(%35 : $Builtin.BridgeObject)            // id: %69

// %70                                            // user: %71
bb13(%70 : $Builtin.BridgeObject):                // Preds: bb12 bb3
  %71 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%70 : $Builtin.BridgeObject) // user: %72
  %72 = struct $_ArrayBuffer<Element> (%71 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>) // user: %73
  %73 = struct $Array<Element> (%72 : $_ArrayBuffer<Element>) // user: %74
  return %73 : $Array<Element>                    // id: %74

bb14:                                             // Preds: bb1
  %75 = string_literal utf8 "Fatal error"         // user: %77
  %76 = integer_literal $Builtin.Word, 11         // user: %78
  %77 = builtin "ptrtoint_Word"(%75 : $Builtin.RawPointer) : $Builtin.Word // user: %78
  %78 = struct $StaticString (%77 : $Builtin.Word, %76 : $Builtin.Word, %5 : $Builtin.Int8) // user: %81
  %79 = struct $UInt32 (%13 : $Builtin.Int32)     // user: %81
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %80 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %81
  %81 = apply %80(%78, %6, %10, %12, %79) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %82
} // end sil function '$SSa19_uninitializedCountSayxGSi_tcfC'

// static Array._allocateBufferUninitialized(minimumCapacity:)
sil public_external [serialized] [noinline] @$SSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ : $@convention(method) <Element> (Int, @thin Array<Element>.Type) -> @owned _ArrayBuffer<Element> {
// %0                                             // user: %4
bb0(%0 : $Int, %1 : $@thin Array<Element>.Type):
  %2 = integer_literal $Builtin.Int64, 0          // users: %51, %7, %5, %3
  %3 = struct $Int (%2 : $Builtin.Int64)          // user: %56
  %4 = struct_extract %0 : $Int, #Int._value      // users: %9, %7, %5
  %5 = builtin "cmp_slt_Int64"(%4 : $Builtin.Int64, %2 : $Builtin.Int64) : $Builtin.Int1 // user: %6
  cond_br %5, bb11, bb1                           // id: %6

bb1:                                              // Preds: bb0
  %7 = builtin "cmp_eq_Int64"(%4 : $Builtin.Int64, %2 : $Builtin.Int64) : $Builtin.Int1 // user: %8
  cond_br %7, bb11, bb2                           // id: %8

bb2:                                              // Preds: bb1
  %9 = builtin "truncOrBitCast_Int64_Word"(%4 : $Builtin.Int64) : $Builtin.Word // user: %10
  %10 = alloc_ref [tail_elems $Element * %9 : $Builtin.Word] $_ContiguousArrayStorage<Element> // users: %60, %43, %39, %34, %11
  %11 = upcast %10 : $_ContiguousArrayStorage<Element> to $_ContiguousArrayStorageBase // users: %61, %58, %20, %12
  %12 = ref_to_raw_pointer %11 : $_ContiguousArrayStorageBase to $Builtin.RawPointer // users: %18, %13
  %13 = struct $UnsafeRawPointer (%12 : $Builtin.RawPointer) // user: %15
  // function_ref _stdlib_malloc_size
  %14 = function_ref @_stdlib_malloc_size : $@convention(c) (UnsafeRawPointer) -> Int // user: %15
  %15 = apply %14(%13) : $@convention(c) (UnsafeRawPointer) -> Int // user: %16
  %16 = struct_extract %15 : $Int, #Int._value    // user: %17
  %17 = builtin "truncOrBitCast_Int64_Word"(%16 : $Builtin.Int64) : $Builtin.Word // user: %18
  %18 = index_raw_pointer %12 : $Builtin.RawPointer, %17 : $Builtin.Word // user: %19
  %19 = struct $UnsafeMutablePointer<Element> (%18 : $Builtin.RawPointer) // user: %24
  %20 = ref_tail_addr %11 : $_ContiguousArrayStorageBase, $Element // user: %21
  %21 = address_to_pointer %20 : $*Element to $Builtin.RawPointer // user: %22
  %22 = struct $UnsafeMutablePointer<Element> (%21 : $Builtin.RawPointer) // user: %24
  // function_ref UnsafeMutablePointer.distance(to:)
  %23 = function_ref @$SSp8distance2toSiSpyxG_tF : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, UnsafeMutablePointer<τ_0_0>) -> Int // user: %24
  %24 = apply %23<Element>(%19, %22) : $@convention(method) <τ_0_0> (UnsafeMutablePointer<τ_0_0>, UnsafeMutablePointer<τ_0_0>) -> Int // user: %46
  %25 = metatype $@thick Element.Type             // users: %35, %26
  %26 = builtin "canBeClass"<Element>(%25 : $@thick Element.Type) : $Builtin.Int8 // users: %31, %28
  %27 = integer_literal $Builtin.Int8, 0          // user: %28
  %28 = builtin "cmp_eq_Int8"(%26 : $Builtin.Int8, %27 : $Builtin.Int8) : $Builtin.Int1 // user: %29
  cond_br %28, bb6, bb3                           // id: %29

bb3:                                              // Preds: bb2
  %30 = integer_literal $Builtin.Int8, 1          // user: %31
  %31 = builtin "cmp_eq_Int8"(%26 : $Builtin.Int8, %30 : $Builtin.Int8) : $Builtin.Int1 // user: %32
  cond_br %31, bb5, bb4                           // id: %32

bb4:                                              // Preds: bb3
  // function_ref _swift_isClassOrObjCExistentialType
  %33 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %35
  strong_retain %10 : $_ContiguousArrayStorage<Element> // id: %34
  %35 = apply %33<Element>(%25) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %36
  br bb7(%35 : $Bool)                             // id: %36

bb5:                                              // Preds: bb3
  %37 = integer_literal $Builtin.Int1, -1         // user: %38
  %38 = struct $Bool (%37 : $Builtin.Int1)        // user: %40
  strong_retain %10 : $_ContiguousArrayStorage<Element> // id: %39
  br bb7(%38 : $Bool)                             // id: %40

bb6:                                              // Preds: bb2
  %41 = integer_literal $Builtin.Int1, 0          // user: %42
  %42 = struct $Bool (%41 : $Builtin.Int1)        // user: %44
  strong_retain %10 : $_ContiguousArrayStorage<Element> // id: %43
  br bb7(%42 : $Bool)                             // id: %44

// %45                                            // user: %49
bb7(%45 : $Bool):                                 // Preds: bb6 bb5 bb4
  %46 = struct_extract %24 : $Int, #Int._value    // user: %48
  %47 = integer_literal $Builtin.Int64, 1         // users: %52, %48
  %48 = builtin "shl_Int64"(%46 : $Builtin.Int64, %47 : $Builtin.Int64) : $Builtin.Int64 // user: %54
  %49 = struct_extract %45 : $Bool, #Bool._value  // user: %50
  cond_br %49, bb9, bb8                           // id: %50

bb8:                                              // Preds: bb7
  br bb10(%2 : $Builtin.Int64)                    // id: %51

bb9:                                              // Preds: bb7
  br bb10(%47 : $Builtin.Int64)                   // id: %52

// %53                                            // user: %54
bb10(%53 : $Builtin.Int64):                       // Preds: bb9 bb8
  %54 = builtin "or_Int64"(%48 : $Builtin.Int64, %53 : $Builtin.Int64) : $Builtin.Int64 // user: %55
  %55 = struct $UInt (%54 : $Builtin.Int64)       // user: %56
  %56 = struct $_SwiftArrayBodyStorage (%3 : $Int, %55 : $UInt) // user: %57
  %57 = struct $_ArrayBody (%56 : $_SwiftArrayBodyStorage) // user: %59
  %58 = ref_element_addr %11 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %59
  store %57 to %58 : $*_ArrayBody                 // id: %59
  strong_release %10 : $_ContiguousArrayStorage<Element> // id: %60
  br bb12(%11 : $_ContiguousArrayStorageBase)     // id: %61

bb11:                                             // Preds: bb1 bb0
  %62 = global_addr @_swiftEmptyArrayStorage : $*_SwiftEmptyArrayStorage // user: %63
  %63 = address_to_pointer %62 : $*_SwiftEmptyArrayStorage to $Builtin.RawPointer // user: %64
  %64 = raw_pointer_to_ref %63 : $Builtin.RawPointer to $_EmptyArrayStorage // users: %66, %65
  %65 = upcast %64 : $_EmptyArrayStorage to $_ContiguousArrayStorageBase // user: %67
  strong_retain %64 : $_EmptyArrayStorage         // id: %66
  br bb12(%65 : $_ContiguousArrayStorageBase)     // id: %67

// %68                                            // user: %69
bb12(%68 : $_ContiguousArrayStorageBase):         // Preds: bb11 bb10
  %69 = unchecked_ref_cast %68 : $_ContiguousArrayStorageBase to $Builtin.BridgeObject // user: %70
  %70 = struct $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore> (%69 : $Builtin.BridgeObject) // user: %71
  %71 = struct $_ArrayBuffer<Element> (%70 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>) // user: %72
  return %71 : $_ArrayBuffer<Element>             // id: %72
} // end sil function '$SSa28_allocateBufferUninitialized15minimumCapacitys06_ArrayB0VyxGSi_tFZ'

// _stdlib_malloc_size
sil [readnone] [clang _stdlib_malloc_size] @_stdlib_malloc_size : $@convention(c) (UnsafeRawPointer) -> Int

// UnsafeMutablePointer.distance(to:)
sil public_external [serialized] @$SSp8distance2toSiSpyxG_tF : $@convention(method) <Pointee> (UnsafeMutablePointer<Pointee>, UnsafeMutablePointer<Pointee>) -> Int {
// %0                                             // user: %2
// %1                                             // user: %4
bb0(%0 : $UnsafeMutablePointer<Pointee>, %1 : $UnsafeMutablePointer<Pointee>):
  %2 = struct_extract %0 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue // user: %3
  %3 = builtin "ptrtoint_Word"(%2 : $Builtin.RawPointer) : $Builtin.Word // user: %6
  %4 = struct_extract %1 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue // user: %5
  %5 = builtin "ptrtoint_Word"(%4 : $Builtin.RawPointer) : $Builtin.Word // user: %6
  %6 = builtin "sub_Word"(%3 : $Builtin.Word, %5 : $Builtin.Word) : $Builtin.Word // user: %7
  %7 = builtin "zextOrBitCast_Word_Int64"(%6 : $Builtin.Word) : $Builtin.Int64 // users: %23, %17
  %8 = metatype $@thick Pointee.Type              // user: %9
  %9 = builtin "strideof"<Pointee>(%8 : $@thick Pointee.Type) : $Builtin.Word // user: %10
  %10 = builtin "zextOrBitCast_Word_Int64"(%9 : $Builtin.Word) : $Builtin.Int64 // users: %23, %20, %12
  %11 = integer_literal $Builtin.Int64, 0         // user: %12
  %12 = builtin "cmp_eq_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1 // user: %14
  %13 = integer_literal $Builtin.Int1, 0          // users: %21, %14
  %14 = builtin "int_expect_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1 // user: %15
  cond_br %14, bb6, bb1                           // id: %15

bb1:                                              // Preds: bb0
  %16 = integer_literal $Builtin.Int64, -9223372036854775808 // user: %17
  %17 = builtin "cmp_eq_Int64"(%7 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int1 // user: %18
  cond_br %17, bb2, bb3                           // id: %18

bb2:                                              // Preds: bb1
  %19 = integer_literal $Builtin.Int64, -1        // user: %20
  %20 = builtin "cmp_eq_Int64"(%10 : $Builtin.Int64, %19 : $Builtin.Int64) : $Builtin.Int1 // user: %21
  %21 = builtin "int_expect_Int1"(%20 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1 // user: %22
  cond_br %21, bb4, bb3                           // id: %22

bb3:                                              // Preds: bb2 bb1
  %23 = builtin "sdiv_Int64"(%7 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int64 // user: %24
  %24 = struct $Int (%23 : $Builtin.Int64)        // user: %25
  return %24 : $Int                               // id: %25

bb4:                                              // Preds: bb2
  %26 = string_literal utf8 "Division results in an overflow" // user: %28
  %27 = integer_literal $Builtin.Word, 31         // user: %30
  %28 = builtin "ptrtoint_Word"(%26 : $Builtin.RawPointer) : $Builtin.Word // user: %30
  %29 = integer_literal $Builtin.Int8, 2          // users: %42, %34, %30
  %30 = struct $StaticString (%28 : $Builtin.Word, %27 : $Builtin.Word, %29 : $Builtin.Int8) // user: %45
  %31 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %33
  %32 = integer_literal $Builtin.Word, 131        // user: %34
  %33 = builtin "ptrtoint_Word"(%31 : $Builtin.RawPointer) : $Builtin.Word // user: %34
  %34 = struct $StaticString (%33 : $Builtin.Word, %32 : $Builtin.Word, %29 : $Builtin.Int8) // user: %45
  %35 = integer_literal $Builtin.Int64, 19252     // user: %36
  %36 = struct $UInt (%35 : $Builtin.Int64)       // user: %45
  %37 = integer_literal $Builtin.Int32, 0         // user: %43
  br bb5                                          // id: %38

bb5:                                              // Preds: bb4
  %39 = string_literal utf8 "Fatal error"         // user: %41
  %40 = integer_literal $Builtin.Word, 11         // user: %42
  %41 = builtin "ptrtoint_Word"(%39 : $Builtin.RawPointer) : $Builtin.Word // user: %42
  %42 = struct $StaticString (%41 : $Builtin.Word, %40 : $Builtin.Word, %29 : $Builtin.Int8) // user: %45
  %43 = struct $UInt32 (%37 : $Builtin.Int32)     // user: %45
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %44 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %45
  %45 = apply %44(%42, %30, %34, %36, %43) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %46

bb6:                                              // Preds: bb0
  %47 = string_literal utf8 "Division by zero"    // user: %49
  %48 = integer_literal $Builtin.Word, 16         // user: %51
  %49 = builtin "ptrtoint_Word"(%47 : $Builtin.RawPointer) : $Builtin.Word // user: %51
  %50 = integer_literal $Builtin.Int8, 2          // users: %63, %55, %51
  %51 = struct $StaticString (%49 : $Builtin.Word, %48 : $Builtin.Word, %50 : $Builtin.Int8) // user: %66
  %52 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/stdlib/public/core/8/Integers.swift" // user: %54
  %53 = integer_literal $Builtin.Word, 131        // user: %55
  %54 = builtin "ptrtoint_Word"(%52 : $Builtin.RawPointer) : $Builtin.Word // user: %55
  %55 = struct $StaticString (%54 : $Builtin.Word, %53 : $Builtin.Word, %50 : $Builtin.Int8) // user: %66
  %56 = integer_literal $Builtin.Int64, 19245     // user: %57
  %57 = struct $UInt (%56 : $Builtin.Int64)       // user: %66
  %58 = integer_literal $Builtin.Int32, 0         // user: %64
  br bb7                                          // id: %59

bb7:                                              // Preds: bb6
  %60 = string_literal utf8 "Fatal error"         // user: %62
  %61 = integer_literal $Builtin.Word, 11         // user: %63
  %62 = builtin "ptrtoint_Word"(%60 : $Builtin.RawPointer) : $Builtin.Word // user: %63
  %63 = struct $StaticString (%62 : $Builtin.Word, %61 : $Builtin.Word, %50 : $Builtin.Int8) // user: %66
  %64 = struct $UInt32 (%58 : $Builtin.Int32)     // user: %66
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %65 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %66
  %66 = apply %65(%63, %51, %55, %57, %64) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %67
} // end sil function '$SSp8distance2toSiSpyxG_tF'


sil_vtable [serialized] _ContiguousArrayStorage {
  #_SwiftNativeNSArray.init!initializer.1: (_SwiftNativeNSArray.Type) -> () -> _SwiftNativeNSArray : @$Ss27_ContiguousArrayStorageBaseCABycfc [inherited] // _ContiguousArrayStorageBase.init()
  #_SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects!1: <R> (_SwiftNativeNSArrayWithContiguousStorage) -> ((UnsafeBufferPointer<AnyObject>) throws -> R) throws -> R : @$Ss27_ContiguousArrayStorageBaseC25withUnsafeBufferOfObjectsyxxSRyyXlGKXEKlF [inherited] // _ContiguousArrayStorageBase.withUnsafeBufferOfObjects<A>(_:)
  #_ContiguousArrayStorageBase.init!initializer.1: (_ContiguousArrayStorageBase.Type) -> (()) -> _ContiguousArrayStorageBase : @$Ss23_ContiguousArrayStorageC16_doNotCallMeBaseAByxGyt_tcfc [override]  // _ContiguousArrayStorage.init(_doNotCallMeBase:)
  #_ContiguousArrayStorageBase._withVerbatimBridgedUnsafeBuffer!1: <R> (_ContiguousArrayStorageBase) -> ((UnsafeBufferPointer<AnyObject>) throws -> R) throws -> R? : @$Ss23_ContiguousArrayStorageC32_withVerbatimBridgedUnsafeBufferyqd__Sgqd__SRyyXlGKXEKlF [override] // _ContiguousArrayStorage._withVerbatimBridgedUnsafeBuffer<A>(_:)
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedCount!1: (_ContiguousArrayStorageBase) -> () -> Int : @$Ss23_ContiguousArrayStorageC27_getNonVerbatimBridgedCountSiyF [override] // _ContiguousArrayStorage._getNonVerbatimBridgedCount()
  #_ContiguousArrayStorageBase._getNonVerbatimBridgedHeapBuffer!1: (_ContiguousArrayStorageBase) -> () -> ManagedBufferPointer<_HeapBufferHeader<Int>, AnyObject> : @$Ss23_ContiguousArrayStorageC32_getNonVerbatimBridgedHeapBuffers07ManagedI7PointerVys01_hI6HeaderVySiGyXlGyF [override]  // _ContiguousArrayStorage._getNonVerbatimBridgedHeapBuffer()
  #_ContiguousArrayStorageBase.canStoreElements!1: (_ContiguousArrayStorageBase) -> (Any.Type) -> Bool : @$Ss23_ContiguousArrayStorageC16canStoreElements13ofDynamicTypeSbypXp_tF [override]  // _ContiguousArrayStorage.canStoreElements(ofDynamicType:)
  #_ContiguousArrayStorageBase.staticElementType!getter.1: (_ContiguousArrayStorageBase) -> () -> Any.Type : @$Ss23_ContiguousArrayStorageC17staticElementTypeypXpvg [override] // _ContiguousArrayStorage.staticElementType.getter
  #_ContiguousArrayStorage.deinit!deallocator: @$Ss23_ContiguousArrayStorageCfD // _ContiguousArrayStorage.__deallocating_deinit
}

sil_vtable [serialized] ManagedBuffer {
  #ManagedBuffer.init!initializer.1: <Header, Element> (ManagedBuffer<Header, Element>.Type) -> (()) -> ManagedBuffer<Header, Element> : @$Ss13ManagedBufferC12_doNotCallMeAByxq_Gyt_tcfc // ManagedBuffer.init(_doNotCallMe:)
  #ManagedBuffer.deinit!deallocator: @$Ss13ManagedBufferCfD // ManagedBuffer.__deallocating_deinit
}



