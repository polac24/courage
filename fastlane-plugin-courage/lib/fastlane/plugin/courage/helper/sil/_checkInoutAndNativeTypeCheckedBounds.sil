// _ArrayBuffer._checkInoutAndNativeTypeCheckedBounds(_:wasNativeTypeChecked:)
sil public_external [serialized] @$Ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtF : $@convention(method) <Element> (Int, Bool, @guaranteed _ArrayBuffer<Element>) -> () {
// %0                                             // user: %109
// %1                                             // users: %70, %54, %41
// %2                                             // user: %3
bb0(%0 : $Int, %1 : $Bool, %2 : $_ArrayBuffer<Element>):
  %3 = struct_extract %2 : $_ArrayBuffer<Element>, #_ArrayBuffer._storage // user: %4
  %4 = struct_extract %3 : $_BridgeStorage<_ContiguousArrayStorageBase, _NSArrayCore>, #_BridgeStorage.rawValue // users: %130, %129, %94, %92, %67, %48, %46, %36, %32, %27
  %5 = string_literal utf8 "inout rules were violated: the array was overwritten" // user: %7
  %6 = integer_literal $Builtin.Word, 52          // user: %9
  %7 = builtin "ptrtoint_Word"(%5 : $Builtin.RawPointer) : $Builtin.Word // user: %9
  %8 = integer_literal $Builtin.Int8, 2           // users: %126, %104, %100, %62, %13, %9
  %9 = struct $StaticString (%7 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8) // user: %65
  %10 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/ArrayBuffer.swift" // user: %12
  %11 = integer_literal $Builtin.Word, 99         // user: %13
  %12 = builtin "ptrtoint_Word"(%10 : $Builtin.RawPointer) : $Builtin.Word // user: %13
  %13 = struct $StaticString (%12 : $Builtin.Word, %11 : $Builtin.Word, %8 : $Builtin.Int8) // user: %65
  %14 = integer_literal $Builtin.Int64, 393       // user: %15
  %15 = struct $UInt (%14 : $Builtin.Int64)       // user: %65
  %16 = integer_literal $Builtin.Int32, 0         // users: %127, %63
  br bb1                                          // id: %17

bb1:                                              // Preds: bb0
  %18 = metatype $@thick Element.Type             // users: %28, %19
  %19 = builtin "canBeClass"<Element>(%18 : $@thick Element.Type) : $Builtin.Int8 // users: %24, %21
  %20 = integer_literal $Builtin.Int8, 0          // user: %21
  %21 = builtin "cmp_eq_Int8"(%19 : $Builtin.Int8, %20 : $Builtin.Int8) : $Builtin.Int1 // user: %22
  cond_br %21, bb5, bb2                           // id: %22

bb2:                                              // Preds: bb1
  %23 = integer_literal $Builtin.Int8, 1          // user: %24
  %24 = builtin "cmp_eq_Int8"(%19 : $Builtin.Int8, %23 : $Builtin.Int8) : $Builtin.Int1 // user: %25
  cond_br %24, bb4, bb3                           // id: %25

bb3:                                              // Preds: bb2
  // function_ref _swift_isClassOrObjCExistentialType
  %26 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %28
  strong_retain %4 : $Builtin.BridgeObject        // id: %27
  %28 = apply %26<Element>(%18) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %29
  br bb6(%28 : $Bool)                             // id: %29

bb4:                                              // Preds: bb2
  %30 = integer_literal $Builtin.Int1, -1         // user: %31
  %31 = struct $Bool (%30 : $Builtin.Int1)        // user: %33
  strong_retain %4 : $Builtin.BridgeObject        // id: %32
  br bb6(%31 : $Bool)                             // id: %33

bb5:                                              // Preds: bb1
  %34 = integer_literal $Builtin.Int1, 0          // user: %35
  %35 = struct $Bool (%34 : $Builtin.Int1)        // user: %37
  strong_retain %4 : $Builtin.BridgeObject        // id: %36
  br bb6(%35 : $Bool)                             // id: %37

// %38                                            // user: %39
bb6(%38 : $Bool):                                 // Preds: bb5 bb4 bb3
  %39 = struct_extract %38 : $Bool, #Bool._value  // user: %40
  cond_br %39, bb9, bb7                           // id: %40

bb7:                                              // Preds: bb6
  %41 = struct_extract %1 : $Bool, #Bool._value   // user: %43
  %42 = integer_literal $Builtin.Int1, 0          // users: %44, %43
  %43 = builtin "cmp_eq_Int1"(%41 : $Builtin.Int1, %42 : $Builtin.Int1) : $Builtin.Int1 // user: %44
  %44 = builtin "int_expect_Int1"(%43 : $Builtin.Int1, %42 : $Builtin.Int1) : $Builtin.Int1 // user: %45
  cond_br %44, bb10, bb8                          // id: %45

bb8:                                              // Preds: bb7
  strong_release %4 : $Builtin.BridgeObject       // id: %46
  br bb12                                         // id: %47

bb9:                                              // Preds: bb6
  %48 = bridge_object_to_word %4 : $Builtin.BridgeObject to $Builtin.Word // user: %49
  %49 = builtin "zextOrBitCast_Word_Int64"(%48 : $Builtin.Word) : $Builtin.Int64 // user: %51
  %50 = integer_literal $Builtin.Int64, -4611686018427387901 // user: %51
  %51 = builtin "and_Int64"(%49 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int64 // user: %53
  %52 = integer_literal $Builtin.Int64, 0         // user: %53
  %53 = builtin "cmp_eq_Int64"(%51 : $Builtin.Int64, %52 : $Builtin.Int64) : $Builtin.Int1 // user: %55
  %54 = struct_extract %1 : $Bool, #Bool._value   // user: %55
  %55 = builtin "cmp_eq_Int1"(%53 : $Builtin.Int1, %54 : $Builtin.Int1) : $Builtin.Int1 // user: %57
  %56 = integer_literal $Builtin.Int1, -1         // user: %57
  %57 = builtin "int_expect_Int1"(%55 : $Builtin.Int1, %56 : $Builtin.Int1) : $Builtin.Int1 // user: %58
  cond_br %57, bb11, bb10                         // id: %58

bb10:                                             // Preds: bb9 bb7
  %59 = string_literal utf8 "Fatal error"         // user: %61
  %60 = integer_literal $Builtin.Word, 11         // user: %62
  %61 = builtin "ptrtoint_Word"(%59 : $Builtin.RawPointer) : $Builtin.Word // user: %62
  %62 = struct $StaticString (%61 : $Builtin.Word, %60 : $Builtin.Word, %8 : $Builtin.Int8) // user: %65
  %63 = struct $UInt32 (%16 : $Builtin.Int32)     // user: %65
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %64 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %65
  %65 = apply %64(%62, %9, %13, %15, %63) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %66

bb11:                                             // Preds: bb9
  strong_release %4 : $Builtin.BridgeObject       // id: %67
  br bb12                                         // id: %68

bb12:                                             // Preds: bb11 bb8
  %69 = integer_literal $Builtin.Int1, -1         // users: %119, %84, %71
  %70 = struct_extract %1 : $Bool, #Bool._value   // user: %71
  %71 = builtin "int_expect_Int1"(%70 : $Builtin.Int1, %69 : $Builtin.Int1) : $Builtin.Int1 // user: %72
  cond_br %71, bb13, bb24                         // id: %72

bb13:                                             // Preds: bb12
  %73 = metatype $@thick Element.Type             // users: %82, %74
  %74 = builtin "canBeClass"<Element>(%73 : $@thick Element.Type) : $Builtin.Int8 // users: %79, %76
  %75 = integer_literal $Builtin.Int8, 0          // user: %76
  %76 = builtin "cmp_eq_Int8"(%74 : $Builtin.Int8, %75 : $Builtin.Int8) : $Builtin.Int1 // user: %77
  cond_br %76, bb17, bb14                         // id: %77

bb14:                                             // Preds: bb13
  %78 = integer_literal $Builtin.Int8, 1          // user: %79
  %79 = builtin "cmp_eq_Int8"(%74 : $Builtin.Int8, %78 : $Builtin.Int8) : $Builtin.Int1 // user: %80
  cond_br %79, bb16, bb15                         // id: %80

bb15:                                             // Preds: bb14
  // function_ref _swift_isClassOrObjCExistentialType
  %81 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %82
  %82 = apply %81<Element>(%73) : $@convention(thin) <τ_0_0> (@thick τ_0_0.Type) -> Bool // user: %83
  br bb18(%82 : $Bool)                            // id: %83

bb16:                                             // Preds: bb14
  %84 = struct $Bool (%69 : $Builtin.Int1)        // user: %85
  br bb18(%84 : $Bool)                            // id: %85

bb17:                                             // Preds: bb13
  %86 = integer_literal $Builtin.Int1, 0          // user: %87
  %87 = struct $Bool (%86 : $Builtin.Int1)        // user: %88
  br bb18(%87 : $Bool)                            // id: %88

// %89                                            // user: %90
bb18(%89 : $Bool):                                // Preds: bb17 bb16 bb15
  %90 = struct_extract %89 : $Bool, #Bool._value  // user: %91
  cond_br %90, bb20, bb19                         // id: %91

bb19:                                             // Preds: bb18
  %92 = unchecked_ref_cast %4 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase // user: %93
  br bb21(%92 : $_ContiguousArrayStorageBase)     // id: %93

bb20:                                             // Preds: bb18
  %94 = bridge_object_to_ref %4 : $Builtin.BridgeObject to $_ContiguousArrayStorageBase // user: %95
  br bb21(%94 : $_ContiguousArrayStorageBase)     // id: %95

// %96                                            // user: %112
bb21(%96 : $_ContiguousArrayStorageBase):         // Preds: bb20 bb19
  %97 = string_literal utf8 "Index out of range"  // user: %99
  %98 = integer_literal $Builtin.Word, 18         // user: %100
  %99 = builtin "ptrtoint_Word"(%97 : $Builtin.RawPointer) : $Builtin.Word // user: %100
  %100 = struct $StaticString (%99 : $Builtin.Word, %98 : $Builtin.Word, %8 : $Builtin.Int8) // user: %131
  %101 = string_literal utf8 "/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/stdlib/public/core/ContiguousArrayBuffer.swift" // user: %103
  %102 = integer_literal $Builtin.Word, 109       // user: %104
  %103 = builtin "ptrtoint_Word"(%101 : $Builtin.RawPointer) : $Builtin.Word // user: %104
  %104 = struct $StaticString (%103 : $Builtin.Word, %102 : $Builtin.Word, %8 : $Builtin.Int8) // user: %131
  %105 = integer_literal $Builtin.Int64, 414      // user: %106
  %106 = struct $UInt (%105 : $Builtin.Int64)     // user: %131
  br bb22                                         // id: %107

bb22:                                             // Preds: bb21
  %108 = integer_literal $Builtin.Int64, 0        // user: %110
  %109 = struct_extract %0 : $Int, #Int._value    // users: %118, %110
  %110 = builtin "cmp_slt_Int64"(%109 : $Builtin.Int64, %108 : $Builtin.Int64) : $Builtin.Int1 // user: %111
  cond_br %110, bb25, bb23                        // id: %111

bb23:                                             // Preds: bb22
  %112 = ref_element_addr %96 : $_ContiguousArrayStorageBase, #_ContiguousArrayStorageBase.countAndCapacity // user: %113
  %113 = struct_element_addr %112 : $*_ArrayBody, #_ArrayBody._storage // user: %114
  %114 = struct_element_addr %113 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage.count // user: %115
  %115 = struct_element_addr %114 : $*Int, #Int._value // user: %116
  %116 = load %115 : $*Builtin.Int64              // user: %117
  %117 = builtin "assumeNonNegative_Int64"(%116 : $Builtin.Int64) : $Builtin.Int64 // user: %118
  %118 = builtin "cmp_slt_Int64"(%109 : $Builtin.Int64, %117 : $Builtin.Int64) : $Builtin.Int1 // user: %119
  %119 = builtin "int_expect_Int1"(%118 : $Builtin.Int1, %69 : $Builtin.Int1) : $Builtin.Int1 // user: %120
  cond_br %119, bb24, bb25                        // id: %120

bb24:                                             // Preds: bb23 bb12
  %121 = tuple ()                                 // user: %122
  return %121 : $()                               // id: %122

bb25:                                             // Preds: bb23 bb22
  %123 = string_literal utf8 "Fatal error"        // user: %125
  %124 = integer_literal $Builtin.Word, 11        // user: %126
  %125 = builtin "ptrtoint_Word"(%123 : $Builtin.RawPointer) : $Builtin.Word // user: %126
  %126 = struct $StaticString (%125 : $Builtin.Word, %124 : $Builtin.Word, %8 : $Builtin.Int8) // user: %131
  %127 = struct $UInt32 (%16 : $Builtin.Int32)    // user: %131
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %128 = function_ref @$Ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %131
  strong_retain %4 : $Builtin.BridgeObject        // id: %129
  strong_retain %4 : $Builtin.BridgeObject        // id: %130
  %131 = apply %128(%126, %100, %104, %106, %127) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %132
} // end sil function '$Ss12_ArrayBufferV37_checkInoutAndNativeTypeCheckedBounds_03wasfgH0ySi_SbtF'

